name: Release

on:
  push:
    branches:
      - main
      - release/v*

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      # Checkout the Branch which was pushed ('main' or 'release/v*')
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node & pnpm
        uses: ./.github/actions/setup-pnpm

      - name: Install & build Dependencies
        run: pnpm bootstrap

      # This will fail the build if something in the publish setup is not correct
      # before changeset magic is starting to run
      - name: Test publish step
        run: pnpm -r publish --dry-run

      # The changeset action will behave differently based on whether there are
      # new changesets on the configured branch:
      #
      #  - new changesets: create a preview PR with the new version bumps and changelogs
      #  - no new changesets (the preview PR got merged into current branch): publish packages
      - name: Changeset Magic
        id: changesets
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SWISSPOSTDEVS_ACCESS_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          title: 'chore(changesets): ðŸ¦‹ðŸ“¦ publish packages (${{ github.ref_name }})'
          commit: 'chore(changesets): publish packages'
          publish: pnpm changeset:publish
          version: pnpm changeset:version

      - name: Create Summary
        id: summary
        uses: actions/github-script@v7
        env:
          PUBLISHED: ${{ steps.changesets.outputs.published }}
          PUBLISHED_PACKAGES: ${{ steps.changesets.outputs.publishedPackages }}
        with:
          script: |
            const publishedPackages = JSON.parse(process.env.PUBLISHED_PACKAGES)

            return `# Changesets
            - Changesets published: <code>${process.env.PUBLISHED}</code>
            - Published Packages:
            <pre>${JSON.stringify(publishedPackages, null, 2)}</pre>
            `

      - name: Output Summary
        run: echo -e ${{ steps.summary.outputs.result }} >> $GITHUB_STEP_SUMMARY
