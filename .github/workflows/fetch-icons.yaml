###
#
# Regularly create a pull request with up-to-date icons
#
# This workflow has access to secrets and
# therefore will not run from a fork.
#
# The schedule event can be delayed during periods of high loads of GitHub Actions workflow runs.
# High load times include the start of every hour. If the load is sufficiently high enough, some queued jobs may be dropped.
# To decrease the chance of delay, schedule your workflow to run at a different time of the hour.
# Source: https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#schedule
#
###

name: Fetch Icons

on:
  workflow_dispatch:
  schedule:
    #        ┌───────────── minute (0 - 59)
    #        │  ┌───────────── hour (0 - 23)
    #        │  │ ┌───────────── day of the month (1 - 31)
    #        │  │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #        │  │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #        │  │ │ │ │
    - cron: '15 0 * * 0' # the job will run every Sunday at 0:15

jobs:
  fetch:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'swisspost'

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/actions/setup-pnpm

      - name: Get Date
        id: current-date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Create Branch
        id: current-branch
        run: |
          git checkout -b $BRANCH_NAME origin/icons-workflow
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
        env:
          BRANCH_NAME: ${{ steps.current-date.outputs.date }}-update-icons

      - name: Install icons & dependencies
        run: pnpm --filter design-system-icons... --filter design-system-styles... install

      - name: Fetch Icons
        run: pnpm --filter design-system-icons fetchSVGs
        env:
          CEN_USERNAME: ${{ secrets.CEN_USERNAME }}
          CEN_PASSWORD: ${{ secrets.CEN_PASSWORD }}
          CEN_URL_ICONSET_POST: ${{ secrets.CEN_URL_ICONSET_POST }}
          CEN_URL_ICONSET_UI: ${{ secrets.CEN_URL_ICONSET_UI }}

      - name: Build styles
        run: pnpm --filter design-system-styles... build

      - name: Commit Changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -am "chore(icons): update icon SVGs"
          git push -u origin ${{ steps.current-branch.outputs.branch }}

      - name: Get Changes
        id: changed-files
        uses: step-security/changed-files@3dbe17c78367e7d60f00d78ae6781a35be47b4a1
        with:
          files: ./packages/icons/src/icons/ui/*.svg

      - name: Get Changed Icons
        id: changed-icons
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
        env:
          ADDED_FILES: ${{ steps.changed-files.outputs.added_files }}
          MODIFIED_FILES: ${{ steps.changed-files.outputs.modified_files }}
          RENAMED_FILES: ${{ steps.changed-files.outputs.renamed_files }}
          COPIED_FILES: ${{ steps.changed-files.outputs.copied_files }}
          DELETED_FILES: ${{ steps.changed-files.outputs.deleted_files }}
        with:
          script: |


      - name: Create Changeset
        if: steps.changed-files.outputs.any_modified != 'false'
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea
        env:
          DATE: ${{ steps.current-date.outputs.date }}
          ICON_CHANGES: ${{ steps.changed-icons.outputs.result }}
        with:
          script: |
            const { DATE, ICON_CHANGES } = process.env
            const { deleted_icons, added_icons, updated_icons } = JSON.parse(ICON_CHANGES)`

            function writeChangeset(title, icons, bump) {
              try {
                const content = `---\n'@swisspost/design-system-icons': ${bump}\n---\n\n${title}:\n\n${icons}`;
                fs.writeFileSync(`./.changeset/${DATE}-${bump}-ui-icon-update.md`, content);
              } catch (err) {
                console.error(err);
              }
            }

            if (deleted_icons) {
              writeChangeset('Deleted Icons', deleted_icons, 'major');
            }

            if (added_icons) {
              writeChangeset('Added Icons', added_icons, 'minor');
            }

            if (updated_icons) {
              writeChangeset('Updated Icons', updated_icons, 'patch');
            }
