###
#
# https://docs.github.com/en/actions/creating-actions/about-custom-actions#using-release-management-for-actions
#
###

name: Artifact Download
description: Downloads an artifact to a specific folder.

inputs:
  name:
    description: Name of the artifact
    required: true
    type: string
  folder:
    description: Path to the folder where to download to
    required: true
    type: string

outputs:
  id:
    description: The build id from the artifact uploading workflow.
    value: ${{ steps.build.outputs.id }}
  action:
    description: The build action from the artifact uploading workflow.
    value: ${{ steps.build.outputs.action }}
  folder:
    description: Path to the folder where to download to
    value: ${{ inputs.folder }}

runs:
  using: composite
  steps:
    - name: Create temporary directory
      shell: bash
      run: mkdir -p ${{ runner.temp }}/artifact_download

    - name: Download artifact
      uses: dawidd6/action-download-artifact@07ab29fd4a977ae4d2b275087cf67563dfdf0295
      with:
        name: ${{ inputs.name }}
        run_id: ${{ github.event.workflow_run.id }}
        workflow_conclusion: success
        path: ${{ runner.temp }}/artifact_download

    - name: Ensure target directory exists
      shell: bash
      run: mkdir -p ${{ inputs.folder }}
      
    - name: Unzip artifacts
      shell: bash
      run: unzip ${{ runner.temp }}/artifact_download/artifacts.zip -d ${{ inputs.folder }}

    - name: Validate artifact contents
      shell: bash
      run: |
        if [[ ! -f "${{ inputs.folder }}/GHA-EVENT-ID" ]]; then
          echo "Error: Event ID file missing"
          exit 1
        fi
        
        if [[ ! -f "${{ inputs.folder }}/GHA-EVENT-ACTION" ]]; then
          echo "Error: Event Action file missing"
          exit 1
        fi
        
        # Validate ID is numeric
        EVENT_ID=$(cat ${{ inputs.folder }}/GHA-EVENT-ID)
        if ! [[ "$EVENT_ID" =~ ^[0-9]*$ ]]; then
          echo "Error: Invalid Event ID format"
          exit 1
        fi

    - name: Clean up
      shell: bash
      run: rm -rf ${{ runner.temp }}/artifact_download

    - name: Create outputs
      id: build
      shell: bash
      run: |
        EVENT_ID=$(cat ${{ inputs.folder }}/GHA-EVENT-ID)
        EVENT_ACTION=$(cat ${{ inputs.folder }}/GHA-EVENT-ACTION)
        
        SANITIZED_ID=$(echo "$EVENT_ID" | tr -cd '[:digit:]')
        SANITIZED_ACTION=$(echo "$EVENT_ACTION" | tr -cd '[:alnum:]-_')
        
        echo "id=$SANITIZED_ID" >> $GITHUB_OUTPUT
        echo "action=$SANITIZED_ACTION" >> $GITHUB_OUTPUT
