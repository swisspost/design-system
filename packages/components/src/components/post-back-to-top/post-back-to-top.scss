@use '@swisspost/design-system-styles/tokens/components';
@use '@swisspost/design-system-styles/functions/tokens';
@use '@swisspost/design-system-styles/components/button';
@use '@swisspost/design-system-styles/core' as post;
@use '@swisspost/design-system-styles/mixins/icons' as icons;
@use '@swisspost/design-system-styles/mixins/utilities';
@use '@swisspost/design-system-styles/mixins/elevation' as elevation-mx;

tokens.$default-map: components.$post-floating-button;

:host {
  --post-floating-button-translate-y: #{tokens.get('post-floating-button-translate-y')};
  position: fixed;
  top: tokens.get('post-floating-button-position-top');
  right: tokens.get('post-floating-button-position-right');

  button.back-to-top {
    @include post.reset-button;
    @include utilities.focus-style;
    @include elevation-mx.elevation('elevation-3');
    cursor: pointer;
    border-radius: tokens.get('post-floating-button-border-radius-round');
    width: tokens.get('post-floating-button-size-outer');
    height: tokens.get('post-floating-button-size-outer');
    border: tokens.get('post-floating-button-border-width') solid
      tokens.get('post-floating-button-enabled-border');
    color: tokens.get('post-floating-button-enabled-fg');
    background-color: tokens.get('post-floating-button-enabled-bg');

    &:hover {
      border-color: tokens.get('post-floating-button-hover-border');
      color: tokens.get('post-floating-button-hover-fg');
      background-color: tokens.get('post-floating-button-hover-bg');
    }
    post-icon {
      height: tokens.get('post-floating-button-size-icon');
      width: tokens.get('post-floating-button-size-icon');
    }
  }

  .visually-hidden {
    @include utilities.visuallyhidden();
  }
}
