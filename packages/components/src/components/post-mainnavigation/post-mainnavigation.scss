@use '@swisspost/design-system-styles/mixins/button';
@use '@swisspost/design-system-styles/mixins/icons';
@use '@swisspost/design-system-styles/mixins/utilities';
@use '@swisspost/design-system-styles/mixins/media';
@use '@swisspost/design-system-styles/functions/tokens';
@use '@swisspost/design-system-styles/tokens/elements';
@use '@swisspost/design-system-styles/variables/animation';
@use '@swisspost/design-system-styles/variables/commons';
@use '@swisspost/design-system-styles/components/header/mixins' as header-mx;
@use '@swisspost/design-system-styles/variables/elevation';
@use '@swisspost/design-system-styles/variables/color';

@include icons.custom-property('chevrondown');

post-mainnavigation {
  // reset links and buttons
  post-list-item {
    > a {
      text-decoration: none;
      border-radius: 0;
    }

    post-megadropdown-trigger button {
      @include button.reset-button;
      text-align: start;
    }

    > a,
    post-megadropdown-trigger button {
      flex: 0 0 fit-content;
      white-space: nowrap;
      display: flex;
      align-items: center;
      justify-content: space-between;

      &:hover {
        color: tokens.get('post-link-hover-fg', elements.$post-link);
      }

      &:focus-visible {
        border-radius: 4px;
        outline-offset: -2px !important;
      }
    }
  }

  // styles specific to for the mega-dropdown buttons
  > button,
  post-megadropdown-trigger button {
    &::after {
      content: '';
      @include icons.mask-image('chevrondown');
      height: 24px;
      width: 24px;
    }

    @include utilities.high-contrast-mode() {
      border: 1px solid ButtonBorder !important;

      &:hover::after,
      &[aria-expanded='true']::after {
        color: HighlightText;
      }
    }
  }

  // desktop styles
  post-header:not([data-burger-menu]) > & {
    display: flex;
    overflow: hidden;
    height: var(--post-main-navigation-height, 0);
    background: color.$white;
    user-select: none;

    nav {
      flex: 1 1 auto;
      overflow: hidden;
      scroll-behavior: smooth;
    }

    .scroll-control {
      $icon-size: 1rem;
      $button-padding: 1rem;
      $button-width: $icon-size + 2 * $button-padding;

      z-index: 1;
      cursor: pointer;
      padding: $button-padding;
      background: color.$white;
      box-shadow: elevation.$elevation-500;
      line-height: 1;

      &.scroll-left {
        margin-inline-end: -1 * $button-width;
      }

      &.scroll-right {
        margin-inline-start: -1 * $button-width;
      }

      &.d-none {
        display: none;
      }

      post-icon {
        font-size: $icon-size;
      }
    }

    post-list > [role='list'] {
      flex-direction: row;
      max-width: 100vw;
    }

    post-list-item {
      > a,
      > button,
      post-megadropdown-trigger button {
        position: sticky;
        padding-inline: 12px;
        height: var(--post-main-navigation-height, 0);
        gap: 4px;
        font-size: 16px;

        .nav-el-active {
          font-weight: 700;
          text-align: center;
          opacity: 0;
        }

        .nav-el-inactive {
          position: absolute;
          opacity: 1;
          text-align: center;
          width: 100%;
          inset-inline-start: 0;
        }

        &.active,
        &[aria-current='page']:not(post-megadropdown *),
        &[aria-expanded='true'] {
          background-color: #050400;
          color: #fff;
          font-weight: 700;

          .nav-el-active {
            opacity: 1;
          }

          .nav-el-inactive {
            opacity: 0;
          }
        }

        &:hover {
          background-color: #504f4b;
          color: #fff;
        }

        @include media.max(sm) {
          font-size: 14px;
        }
      }

      // styles specific to for the mega-dropdown buttons
      > button,
      post-megadropdown-trigger button {
        padding-inline-end: 12px;
        transition: border-block-end-color animation.$transition-base-timing;

        .nav-el-inactive {
          width: calc(100% - 28px);
        }

        &::after {
          transition: transform animation.$transition-base-timing;
        }

        &[aria-expanded='true']::after {
          transform: rotate(180deg);
        }
      }
    }

    post-megadropdown {
      button:not(:is(post-closebutton *)),
      a {
        @include header-mx.mobile-header-interactive;
      }
    }
  }

  // tablet/mobile styles
  post-header[data-burger-menu] > & {
    nav {
      transform: none !important;
    }

    .scroll-control {
      display: none;
    }

    post-list-item {
      > a,
      > button,
      post-megadropdown-trigger button {
        @include header-mx.mobile-header-interactive;

        .nav-el-inactive {
          display: none;
        }
      }
    }

    // styles specific to for the mega-dropdown buttons
    > button::after,
    post-megadropdown-trigger button::after {
      transform: rotate(-90deg);
    }
  }
}
