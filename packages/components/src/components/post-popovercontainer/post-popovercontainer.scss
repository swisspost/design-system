@use 'sass:meta';
@use 'sass:math';
@use 'sass:map';

@use '@swisspost/design-system-styles/variables/commons';
@use '@swisspost/design-system-styles/functions/tokens';
@use '@swisspost/design-system-styles/tokens/components';

tokens.$default-map: components.$post-popover;

// Puts polyfilled styles in a separate layer so they are easy to override
// Can be removed as soon as popover is supported by all major browsers
// https://caniuse.com/?search=popover
@layer polyfill {
  @supports not selector(:popover-open) {
    [popover]:not(.\:popover-open) {
      display: none;
    }
  }
}

:where(post-popovercontainer) {
  position: fixed;
  z-index: commons.$zindex-popover;
  width: max-content;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  color: tokens.get('popover', 'surface-fg');
  background-color: tokens.get('popover', 'surface-bg');
  border: 2px solid transparent; // Keeping the default border for HCM
  border-radius: tokens.get('popover', 'surface-border-radius');
  box-shadow: tokens.get('popover', 'elevation');
  overflow: visible; // Keeps the little arrow visible

  .arrow {
    $arrow-size: 0.5825rem;
    position: absolute;
    width: $arrow-size;
    height: $arrow-size;
    background-color: inherit;
    rotate: 45deg;
    pointer-events: none;
    z-index: -1;

    // Create transparent border to be styled by and for the high contrast mode
    &.top {
      border-left: 2px solid transparent;
      border-top: 2px solid transparent;
    }

    &.right {
      border-right: 2px solid transparent;
      border-top: 2px solid transparent;
    }

    &.left {
      border-left: 2px solid transparent;
      border-bottom: 2px solid transparent;
    }

    &.bottom {
      border-right: 2px solid transparent;
      border-bottom: 2px solid transparent;
    }
  }
}
