@use 'sass:map';

@use './../../themes/bootstrap/core' as *;

@use './../../variables/spacing';
@use './../../variables/type';
@use './../../variables/components/paragraph';
@use './../../mixins/type' as type-mx;
@use './../../placeholders/text';

@mixin styles {
  h1,
  .h1,
  h2,
  .h2 {
    // H1 and H2 have hardcoded margins instead of textsize base margins
    margin-bottom: map.get(spacing.$post-sizes, 'small-large');

    @include media-breakpoint-up(md) {
      margin-bottom: map.get(spacing.$post-sizes, 'large');
    }
  }

  h1,
  .h1 {
    @extend %font-curve-big;
  }

  h2,
  .h2 {
    @extend %font-curve-large;
  }

  h3,
  .h3,
  h4,
  .h4 {
    @extend %font-curve-medium;
  }

  h3,
  .h3,
  h4,
  .h4,
  p {
    @extend %text-bottom-spacer;
  }

  h3,
  .h3,
  h4,
  .h4,
  h5,
  .h5 {
    margin-top: map.get(spacing.$post-sizes, 'bigger-big');

    // Temporary resolution to avoid margin-top spreading inside Notification Overlay
    .modal-dialog & {
      margin-top: 0;
    }
  }

  h5,
  .h5,
  p {
    @extend %font-curve-regular;
  }

  p {
    margin-top: 0;
    font-weight: type.$font-weight-light;
  }

  h5,
  .h5 {
    margin-bottom: 0;
  }

  h3,
  .h3,
  h5,
  .h5 {
    font-weight: type.$font-weight-bold;
  }

  .lead {
    @include type-mx.font-curve('bigger-regular');
    margin-bottom: paragraph.$text-bottom-space;
  }
}
