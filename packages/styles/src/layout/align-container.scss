@use 'sass:map';
@use '../functions/tokens';
@use '../mixins/media';
@use '../tokens/components';
@use '../variables/breakpoints';

tokens.$default-map: components.$post-container;

.container :has(.align-container-start, .align-container-end) {
  @each $breakpoint in map.keys(breakpoints.$grid-breakpoints) {
    @include media.min($breakpoint) {
      $gutter: tokens.get('grid-gutter-#{$breakpoint}');
      $padding: tokens.get('grid-padding-#{$breakpoint}');
      --post-grid-gutter-x: #{$gutter};

      > .row > [class*='col']:last-of-type > .align-container-end,
      > :not([class*='col']) > .align-container-end:last-of-type {
        margin-inline-end: calc(-1 * max(#{$padding}, calc(0.5 * var(--post-grid-gutter-x))));
        max-width: calc(100% + max(#{$padding}, calc(0.5 * var(--post-grid-gutter-x))));
      }

      > .row > [class*='col']:first-of-type > .align-container-start,
      > :not([class*='col']) > .align-container-start:first-of-type {
        margin-inline-start: calc(-1 * max(#{$padding}, calc(0.5 * var(--post-grid-gutter-x))));
        max-width: calc(100% + max(#{$padding}, calc(0.5 * var(--post-grid-gutter-x))));
      }
    }
  }
}
