@use 'sass:map';
@use './core';
@use '../tokens/temp/schemestatic';
@use '../mixins/supports';

@mixin light-scheme-variables() {
  @each $key, $value in schemestatic.$post-light {
    --#{$key}: #{$value};
  }

  @include supports.light-dark(false) {
    --post-scheme-even: ;
    --post-scheme-swapped: initial;
    --post-scheme-light: ;
    --post-scheme-dark: initial;
  }
}

@mixin dark-scheme-variables() {
  @each $key, $value in schemestatic.$post-dark {
    --#{$key}: #{$value};
  }

  @include supports.light-dark(false) {
    --post-scheme-even: initial;
    --post-scheme-swapped: ;
    --post-scheme-light: ;
    --post-scheme-dark: initial;
  }
}

// prefered root color-scheme
:root {
  @media (prefers-color-scheme: light) {
    @include light-scheme-variables;
  }

  @media (prefers-color-scheme: dark) {
    @include dark-scheme-variables;
  }

  @include supports.light-dark(true) {
    color-scheme: light dark;
  }

  @include supports.light-dark(false) {
    --fallback-prefers-light: ;
  }
}

// forced root color-scheme light
[data-color-scheme='light'] {
  @include light-scheme-variables;

  @include supports.light-dark(true) {
    color-scheme: light;
  }

  @include supports.light-dark(false) {
    --fallback-prefers-light: ;
  }
}

// forced root color-scheme dark
[data-color-scheme='dark'] {
  @include dark-scheme-variables;

  @include supports.light-dark(true) {
    color-scheme: dark;
  }

  @include supports.light-dark(false) {
    --fallback-prefers-light: initial;
  }
}
