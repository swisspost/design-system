@forward './../variables/options';

@use './../mixins/utilities';
@use './../functions/forms' as forms-fx;
@use './../mixins/forms' as forms-mx;
@use './../functions/tokens';
@use './../tokens/components';
@use './../tokens/elements';

tokens.$default-map: components.$post-select;

.form-select {
  display: block;
  width: 100%;
  font-family: tokens.get('body-font-family', elements.$post-body);
  appearance: none;
  position: relative;
  min-height: tokens.get('select-sizing-height');
  padding-block: tokens.get('select-standalone-padding-block');
  padding-inline-start: tokens.get('select-padding-inline-start');
  padding-inline-end: tokens.get('select-padding-inline-end');
  background-color: tokens.get('select-color-enabled-bg');
  background-repeat: no-repeat;
  background-size: tokens.get('select-sizing-icon');
  background-position: center right tokens.get('select-icon-position-inline-end');
  border-width: tokens.get('select-border-width');
  border-color: tokens.get('select-color-enabled-border');
  border-radius: tokens.get('select-border-radius');
  color: tokens.get('select-color-enabled-fg');
  background-image: forms-fx.select-arrow-icon('enabled');

  &:disabled {
    opacity: 1;
    color: tokens.get('select-color-disabled-fg');
    background-color: tokens.get('select-color-disabled-bg');
    border-color: tokens.get('select-color-disabled-border');
    border-style: tokens.get('select-border-style-disabled');

    &:not([multiple]) {
      background-image: forms-fx.select-arrow-icon('disabled');
    }
  }

  &:not(:disabled) {
    &:focus {
      background-color: tokens.get('select-color-selected-bg');
      color: tokens.get('select-color-selected-fg');
      border-color: tokens.get('select-color-selected-border');
      background-image: forms-fx.select-arrow-icon('selected');

      @include utilities.focus-style;

      @include utilities.high-contrast-mode {
        border-color: FieldText;
      }

      @include utilities.high-contrast-mode-dark() {
        background-image: forms-fx.select-arrow-icon('selected-hcm', $mode: dark);
      }
    }

    &:hover {
      background-color: tokens.get('select-color-hover-bg');
      color: tokens.get('select-color-enabled-fg');
      border-color: tokens.get('select-color-hover-border');

      &:not([multiple]) {
        background-image: forms-fx.select-arrow-icon('hover');

        @include utilities.high-contrast-mode-light() {
          background-image: forms-fx.select-arrow-icon('hover-hcm', $mode: light);
        }

        @include utilities.high-contrast-mode-dark() {
          background-image: forms-fx.select-arrow-icon('hover-hcm', $mode: dark);
        }
      }

      @include utilities.high-contrast-mode {
        border-color: Highlight;
      }
    }
  }

  @include utilities.high-contrast-mode() {
    background-color: Field;
    border-color: FieldText;
    color: FieldText;

    &:focus-visible {
      color: FieldText;
    }
  }

  @include utilities.high-contrast-mode-light() {
    background-image: forms-fx.select-arrow-icon('enabled-hcm', $mode: light);
  }

  @include utilities.high-contrast-mode-dark() {
    background-image: forms-fx.select-arrow-icon('enabled-hcm', $mode: dark);
  }

  &.is-valid,
  &.is-invalid {
    &:not(:disabled) {
      padding-inline-end: tokens.get('select-label-validated-padding-inline-end');
      background-position:
        center right tokens.get('select-icon-position-inline-end'),
        center right tokens.get('select-validation-icon-position-inline-end');
    }
  }

  &.is-valid:not(:disabled) {
    background-image: forms-fx.select-arrow-icon('enabled'), forms-fx.success-icon();

    &:focus {
      background-image: forms-fx.select-arrow-icon('selected'), forms-fx.success-icon();
    }

    &:hover {
      &:not([multiple]) {
        background-image: forms-fx.select-arrow-icon('hover'), forms-fx.success-icon();
      }
    }

    &,
    &:hover:not([multiple]),
    &:focus {
      @include utilities.high-contrast-mode-dark() {
        background-image: forms-fx.select-arrow-icon('enabled'), forms-fx.success-icon(#e0e0e0);
      }

      @include utilities.high-contrast-mode-light() {
        background-image: forms-fx.select-arrow-icon('enabled'), forms-fx.success-icon(#333);
      }
    }
  }

  &.is-invalid:not(:disabled) {
    background-image: forms-fx.select-arrow-icon('enabled'), forms-fx.warning-icon();

    &:focus {
      background-image: forms-fx.select-arrow-icon('selected'), forms-fx.warning-icon();
    }

    &:hover {
      &:not([multiple]) {
        background-image: forms-fx.select-arrow-icon('hover'), forms-fx.warning-icon();
      }
    }

    &,
    &:hover:not([multiple]),
    &:focus {
      @include utilities.high-contrast-mode-dark() {
        background-image: forms-fx.select-arrow-icon('enabled'), forms-fx.warning-icon(#e0e0e0);
      }

      @include utilities.high-contrast-mode-light() {
        background-image: forms-fx.select-arrow-icon('enabled'), forms-fx.warning-icon(#333);
      }
    }
  }

  &[multiple],
  &[size]:not([size='1']) {
    background-image: none;

    &.is-valid,
    &.is-invalid {
      background-position: center right tokens.get('select-validation-icon-position-inline-end');
    }

    @include forms-mx.validation-icons();
  }
}

.form-floating {
  position: relative;

  > .form-select {
    padding-block-start: tokens.get('select-padding-block-start');
    padding-block-end: tokens.get('select-padding-block-end');

    ~ label {
      position: absolute;
      z-index: 2;
      text-align: start;
      pointer-events: none;
      display: block;
      left: tokens.get('select-border-width');
      top: tokens.get('select-border-width');
      font-size: tokens.get('select-label-filled-font-size');
      padding-inline-start: calc(
        tokens.get('select-label-empty-padding-inline-start') - tokens.get('select-border-width')
      );
      padding-inline-end: 0;
      padding-block-start: tokens.get('select-label-filled-padding-block-start');
      border-radius: tokens.get('select-border-radius');
      color: tokens.get('select-color-enabled-fg');
      max-width: calc(
        100% - (#{tokens.get('select-border-width')} * 2) - tokens.get(
            'select-label-empty-padding-inline-end'
          )
      );
      background-color: tokens.get('select-color-enabled-bg');
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      transition:
        font-size 0.25s ease-in-out,
        padding-block-start 0.25s ease-in-out;
    }

    &:not(:disabled):hover ~ label {
      color: tokens.get('select-color-hover-fg');
      background-color: tokens.get('select-color-hover-bg');
    }

    &:disabled ~ label {
      color: tokens.get('select-color-disabled-fg');
      background-color: tokens.get('select-color-disabled-bg');
    }

    &:empty,
    &.form-select-empty {
      ~ label {
        padding-block-start: tokens.get('select-label-empty-padding-block-start');
        font-size: unset;
      }
    }

    &[multiple] {
      padding-block-end: 0;
      height: auto;

      option {
        color: tokens.get('select-color-enabled-fg');
      }

      ~ label {
        // Add some distance on the right to leave space for the scrollbar
        width: calc(100% - (#{tokens.get('select-padding-inline-end')} * 2));
      }

      &:disabled option {
        color: tokens.get('select-color-disabled-fg');
      }

      &:empty {
        ~ label {
          padding-block: tokens.get('select-standalone-padding-block');
          width: calc(
            100% - (#{tokens.get('select-border-width')} * 2) - #{tokens.get(
                'select-label-empty-padding-inline-start'
              )}
          );
        }
      }
    }
  }
}

[data-color-scheme='dark'] {
  .form-select:not([multiple]) {
    background-image: forms-fx.select-arrow-icon('enabled', 'dark');

    &:disabled {
      background-image: forms-fx.select-arrow-icon('disabled', 'dark');
    }

    &:not(:disabled) {
      &:focus {
        background-image: forms-fx.select-arrow-icon('selected', 'dark');
      }

      &:hover {
        background-image: forms-fx.select-arrow-icon('hover', 'dark');
      }
    }

    &.is-valid:not(:disabled) {
      background-image: forms-fx.select-arrow-icon('enabled', 'dark'), forms-fx.success-icon();

      &:focus {
        background-image: forms-fx.select-arrow-icon('selected', 'dark'), forms-fx.success-icon();
      }

      &:hover {
        background-image: forms-fx.select-arrow-icon('hover', 'dark'), forms-fx.success-icon();
      }
    }

    &.is-invalid:not(:disabled) {
      background-image: forms-fx.select-arrow-icon('enabled', 'dark'), forms-fx.warning-icon();

      &:focus {
        background-image: forms-fx.select-arrow-icon('selected', 'dark'), forms-fx.warning-icon();
      }

      &:hover {
        background-image: forms-fx.select-arrow-icon('hover', 'dark'), forms-fx.warning-icon();
      }
    }
  }
}
