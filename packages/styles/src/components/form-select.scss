@use './../mixins/utilities';
@use './../mixins/forms';
@use './../functions/tokens';
@use './../tokens/components';
@use './../tokens/elements';

tokens.$default-map: components.$post-select;

.form-select {
  display: block;
  width: 100%;
  font-family: tokens.get('body-font-family', elements.$post-body);
  appearance: none;
  position: relative;
  min-height: tokens.get('select-sizing-height');
  padding-block: tokens.get('select-empty-padding-block');
  padding-inline-start: tokens.get('select-padding-inline-start');
  padding-inline-end: tokens.get('select-padding-inline-end');
  background-color: tokens.get('select-color-enabled-bg');
  background-repeat: no-repeat;
  background-size: tokens.get('select-sizing-icon');
  background-position: center right tokens.get('select-padding-inline-end');
  border-width: tokens.get('select-border-width');
  border-color: tokens.get('select-color-enabled-border');
  border-radius: tokens.get('select-border-radius-surface');
  color: tokens.get('select-color-enabled-fg');
  @include forms.select-bg-image('enabled');

  &:disabled {
    color: tokens.get('select-color-disabled-fg');
    background-color: tokens.get('select-color-disabled-bg');
    border-color: tokens.get('select-color-disabled-border');
    border-style: tokens.get('select-border-style-disabled');

    &:not([multiple]) {
      @include forms.select-bg-image('disabled');
    }
  }

  &:not(:disabled) {
    &:focus {
      background-color: tokens.get('select-color-selected-bg');
      color: tokens.get('select-color-selected-fg');
      border-color: tokens.get('select-color-selected-border');
      @include forms.select-bg-image('selected');

      @include utilities.focus-style;

      @include utilities.high-contrast-mode {
        border-color: FieldText;
      }
    }

    &:hover {
      background-color: tokens.get('select-color-hover-bg');
      color: tokens.get('select-color-enabled-fg');
      border-color: tokens.get('select-color-hover-border');

      &:not([multiple]) {
        @include forms.select-bg-image('hover');
      }

      @include utilities.high-contrast-mode {
        border-color: Highlight;
      }
    }
  }

  @include utilities.high-contrast-mode() {
    background-color: Field;
    border-color: FieldText;
    color: FieldText;

    &:focus-visible {
      color: FieldText;
    }
  }

  &.is-valid,
  &.is-invalid {
    &:not(:disabled) {
      background-position:
        center right tokens.get('select-validation-icon-position-inline-end'),
        center right
          calc(
            tokens.get('select-validation-icon-position-inline-end') +
              tokens.get('select-sizing-icon') + tokens.get('select-gap-inline-2')
          );
    }
  }

  &.is-valid:not(:disabled) {
    @include forms.select-bg-image('enabled', 'valid');

    &:focus {
      @include forms.select-bg-image('selected', 'valid');
    }

    &:hover {
      &:not([multiple]) {
        @include forms.select-bg-image('hover', 'valid');
      }
    }
  }

  &.is-invalid:not(:disabled) {
    @include forms.select-bg-image('enabled', 'invalid');

    &:focus {
      @include forms.select-bg-image('selected', 'invalid');
    }

    &:hover {
      &:not([multiple]) {
        @include forms.select-bg-image('hover', 'invalid');
      }
    }
  }

  &[multiple],
  &[size]:not([size='1']) {
    background-image: none;

    &.is-valid,
    &.is-invalid {
      background-position: center right
        calc(#{tokens.get('select-validation-icon-position-inline-end')} * 2);
    }

    &.is-valid:not(:disabled) {
      @include forms.select-bg-image($validation: 'valid');
    }

    &.is-invalid:not(:disabled) {
      @include forms.select-bg-image($validation: 'invalid');
    }
  }
}

.form-floating {
  position: relative;

  > .form-select {
    padding-block-start: tokens.get('select-filled-padding-block-start');
    padding-block-end: tokens.get('select-filled-padding-block-end');

    & ~ label {
      position: absolute;
      z-index: 2;
      text-align: start;
      pointer-events: none;
      display: block;
      left: tokens.get('select-border-width');
      top: tokens.get('select-border-width');
      font-size: tokens.get('select-label-filled-font-size');
      padding-inline-start: tokens.get('select-label-empty-padding-inline-start');
      padding-inline-end: tokens.get('select-label-empty-padding-inline-end');
      padding-block-start: tokens.get('select-label-filled-padding-block-start');
      color: tokens.get('select-color-enabled-fg');
      max-width: calc(100% - (#{tokens.get('select-border-width')} * 2));
      background-color: tokens.get('select-color-enabled-bg');
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      transition: all 0.25s ease-in-out;
    }

    &:not(:disabled):hover ~ label {
      color: tokens.get('select-color-hover-fg');
    }

    &:disabled ~ label {
      color: tokens.get('select-color-disabled-fg');
    }

    &:empty,
    &.form-select-empty {
      ~ label {
        padding-block-start: tokens.get('select-label-empty-padding-block-start');
        font-size: unset;
      }
    }

    &[multiple] {
      padding-block-end: 0;
      height: auto;

      option {
        color: tokens.get('select-color-enabled-fg');
      }

      ~ label {
        // Add some distance on the right to leave space for the scrollbar
        width: calc(100% - (#{tokens.get('select-padding-inline-end')} * 2));
      }

      &:disabled option {
        color: tokens.get('select-color-disabled-fg');
      }

      &:empty {
        ~ label {
          padding-block: tokens.get('select-empty-padding-block');
          width: calc(
            100% - (#{tokens.get('select-border-width')} * 2) - #{tokens.get(
                'select-label-empty-padding-inline-start'
              )}
          );
        }
      }
    }
  }
}
