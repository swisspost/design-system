@forward './../variables/options';

@use './../lic/bootstrap-license';
@use './../themes/bootstrap/core' as b;
@use './../themes/bootstrap/forms/form-select' as bffs;
@use './../mixins/forms' as forms-mixins;
@use './../mixins/utilities';

@use './../variables/commons';
@use './../variables/components/forms';
@use './../variables/components/form-select' as form-select;

.form-select-wrapper {
  @include utilities.focus-style() {
    border-radius: commons.$border-radius;
  }
}

:not(.form-select-wrapper) > {
  .form-select {
    @include utilities.focus-style() {
      border-radius: commons.$border-radius;
    }
  }
}

.form-select {
  --form-select-indicator: #{form-select.$form-select-indicator};

  &:focus {
    box-shadow: none; // Override bootstrap

    @include utilities.high-contrast-mode {
      border-color: FieldText !important;
    }
  }

  &:not(:disabled) {
    &:hover,
    &:focus {
      @include utilities.high-contrast-mode {
        border-color: FieldText;
      }
    }

    &:hover {
      @include utilities.high-contrast-mode {
        border-color: Highlight;
      }
    }
  }

  @include utilities.disabled-style {
    ~ .form-text {
      color: var(--post-gray-60);
    }
  }

  &:not([multiple]) {
    &:disabled {
      background-image: b.escape-svg(form-select.$form-select-indicator-disabled),
        var(--form-select-indicator), var(--bs-form-select-bg-icon, none);
    }
  }

  @include utilities.high-contrast-mode() {
    --form-select-indicator: #{b.escape-svg(form-select.$form-select-indicator-hcm-dark)};
    background-image: b.escape-svg(form-select.$form-select-indicator-hcm-dark);

    @media (prefers-color-scheme: light) {
      --form-select-indicator: #{b.escape-svg(form-select.$form-select-indicator-hcm-light)};
      background-image: b.escape-svg(form-select.$form-select-indicator-hcm-light);
    }

    background-color: Field;
    border-color: FieldText;
    color: FieldText;

    &:focus-visible {
      color: FieldText;
    }
  }
}

.form-select-rg {
  @include forms-mixins.form-rg;
  background-size: forms.$form-bg-size; // Set arrow size. Duplicated rule in form-validation for is-valid/is-invalid icon.
}

.form-select-sm {
  @include forms-mixins.form-sm;
  background-size: forms.$form-bg-size-sm; // Set arrow size. Duplicated rule in form-validation for is-valid/is-invalid icon.
}

.form-select-lg {
  @include forms-mixins.form-lg;
  background-size: forms.$form-bg-size; // Set arrow size. Duplicated rule in form-validation for is-valid/is-invalid icon.
}
