@use 'form-check';
@use '../variables/color';
@use '../variables/animation';
@use '../mixins/color' as color-mx;
@use '../mixins/icons' as icons-mx;
@use '../mixins/utilities' as utility-mx;
@use './../placeholders/form-check' as form-check-ph;
@use '../tokens/components';
@use '../functions/tokens';

tokens.$default-map: components.$post-checkbox;

fieldset > .form-check:not(:last-of-type) {
  margin-bottom: tokens.get('checkbox-gap-block-group');
}

.form-check:has(input[type='checkbox']):not(.form-switch) {
  &:has(> input:not(:only-child)) {
    @include utility-mx.focus-style();
  }
  padding-block: tokens.get('checkbox-padding-block-single', components.$post-checkbox);

  > input {
    &:only-child {
      @include utility-mx.focus-style();
    }

    @extend %checkbox;
  }
}
