@forward './../variables/options';

@use 'sass:map';

@use './../lic/bootstrap-license';
@use './../themes/bootstrap/core' as b;
@use './../themes/bootstrap/forms/validation' as bfv;

@use './../mixins/color' as color-mx;
@use './../mixins/utilities' as utilities-mx;
@use './../mixins/form-validation' as form-validation-mx;
@use './../variables/color';
@use './../variables/components/form-validation';
@use './../variables/components/forms';
@use './../variables/spacing';

.invalid-feedback,
.valid-feedback {
  display: none;
  width: 100%;
  margin-block: form-validation.$form-feedback-margin-top 0;
  padding: form-validation.$form-feedback-padding-y form-validation.$form-feedback-padding-x;
  font-size: form-validation.$form-feedback-font-size;

  @include utilities-mx.high-contrast-mode() {
    color: HighlightText !important;
    background-color: Highlight !important;
    forced-color-adjust: none;
  }
}

.invalid-feedback {
  background: form-validation.$form-feedback-invalid-bg;
  color: form-validation.$form-feedback-invalid-text;
}

.valid-feedback {
  background: form-validation.$form-feedback-valid-bg;
  color: form-validation.$form-feedback-valid-text;
}

.valid-feedback.custom-feedback {
  background: form-validation.$form-feedback-custom-bg;
  color: form-validation.$form-feedback-custom-text;
}

@each $state, $data in b.$form-validation-states {
  $icon: map.get($data, 'icon');

  @include b.form-validation-state-selector($state) {
    ~ .#{$state}-feedback,
    ~ .#{$state}-tooltip {
      display: block;
    }
  }

  .form-control {
    @include b.form-validation-state-selector($state) {
      padding-right: b.$input-height-inner;
      background-image: b.escape-svg($icon);
      background-repeat: no-repeat;
      background-position: right b.$input-height-inner-quarter center;
      background-size: form-validation.$form-feedback-icon-size;
    }
  }

  textarea.form-control {
    @include b.form-validation-state-selector($state) {
      padding-right: b.$input-height-inner;
      background-position: top b.$input-height-inner-quarter right b.$input-height-inner-quarter;
    }
  }

  .input-group {
    > .form-control:not(:focus),
    > .form-select:not(:focus),
    > .form-floating:not(:focus-within) {
      @include b.form-validation-state-selector($state) {
        @if $state == 'valid' {
          z-index: 3;
        } @else if $state == 'invalid' {
          z-index: 4;
        }
      }
    }
  }
}

.is-invalid ~ .invalid-feedback,
.is-valid ~ .valid-feedback {
  display: block;
}

.form-control,
.form-select {
  @include form-validation-mx.form-validation-state-selector(invalid) {
    border-color: form-validation.$form-feedback-invalid-color;

    &.is-valid {
      padding-right: spacing.$size-small-huge; // For deprecated form-control-rg
      border-color: var(--post-success-green);
      background-image: b.escape-svg(form-validation.$form-feedback-icon-valid);
      background-repeat: no-repeat;
      background-position: right b.$input-height-inner-quarter center;

      &.form-control-sm {
        padding-right: spacing.$size-bigger-big; // Included in bootstrap and prevent native icon (e.g. with input[type=date]) to stack over success icon
        background-size: forms.$form-bg-size-sm; // Add space between background icons (ours and the one from bootstrap)
      }

      &.form-control-lg {
        padding-right: spacing.$size-small-huge; // Included in bootstrap and prevent native icon (e.g. with input[type=date]) to stack over success icon
        background-size: forms.$form-bg-size; // Add space between background icons (ours and the one from bootstrap)
      }
    }

    &:focus {
      border-color: form-validation.$form-feedback-invalid-color;
      box-shadow: form-validation.$form-feedback-invalid-box-shadow;
    }
  }
}

.form-check-input {
  @include form-validation-mx.form-validation-state-selector(invalid) {
    border-color: form-validation.$form-feedback-invalid-color;

    &:focus {
      box-shadow: form-validation.$form-feedback-invalid-box-shadow;
    }

    ~ .form-check-label {
      color: form-validation.$form-feedback-invalid-color;
    }

    @include color-mx.on-dark-background {
      border-color: inherit;

      ~ .form-check-label {
        color: color.$white;
      }
    }
  }
}
