@use './../../functions/calc';
@use './../../mixins/typo' as typo-mx;
@use './../../mixins/components/forms/input' as input-mx;
@use './../../variables/components/forms/input';

@use './../../functions/tokens';
@use './../../tokens/components';

tokens.$default-map: components.$post-text-input;

.form-floating-v2 {
  position: relative;

  .form-label-v2 {
    @include typo-mx.use(label-default);

    position: absolute;
    inset-inline: input.$input-border-width;
    inset-block-start: input.$input-border-width;
    padding-inline-start: tokens.get-no-split('post-input-spacing-padding-inline-text-start');
    padding-block-start: calc.add(
      tokens.get-no-split('post-input-spacing-padding-block-text1'),
      tokens.get-no-split('post-input-spacing-padding-block-text5')
    );

    color: tokens.get-no-split('post-input-color-enabled-fg');
  }

  .form-control-v2 {
    + .form-label-v2 {
      @include input-mx.padding-inline-end();
    }

    &:is(:not(:placeholder-shown), :placeholder-shown:focus) {
      + .form-label-v2 {
        @include typo-mx.use(label-smaller);
        padding-block-start: tokens.get-no-split('post-input-spacing-padding-block-text2');
      }
    }

    &:hover {
      + .form-label-v2 {
        color: tokens.get-no-split('post-input-color-hover-fg');
      }
    }

    &:disabled {
      + .form-label-v2 {
        color: tokens.get-no-split('post-input-color-disabled-fg');
      }
    }
  }
}
