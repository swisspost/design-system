@use 'sass:map';
@use '../tokens/elements';
@use '../functions/tokens';
@use '../functions/icons';
@use './../mixins/icons' as icon-mixin;
@use '../tokens/components';

tokens.$default-map: components.$post-validation;

/*
Default feedback message classes
 */
.valid-feedback,
.invalid-feedback {
  display: none;
  align-items: center;
  width: 100%;
  margin: 0;
  padding: tokens.get('post-validation-input-padding-block')
    tokens.get('post-validation-input-padding-inline');
  font-size: tokens.get('post-validation-font-size');
}

/*
 Valid input feedback
*/
.valid-feedback {
  color: tokens.get('post-validation-success');

  .was-validated :valid ~ &,
  .is-valid ~ & {
    display: flex;
  }
}
// Special for Card Control
.was-validated:has(:valid) ~ .valid-feedback,
:has(.is-valid) ~ .valid-feedback {
  display: flex;
}

/*
 Invalid input feedback
*/
.invalid-feedback {
  color: tokens.get('post-validation-error');

  .was-validated :invalid ~ &,
  .is-invalid ~ & {
    display: flex;
  }
}

// Special for Card Control
.was-validated:has(:invalid) ~ .invalid-feedback,
:has(.is-invalid) ~ .invalid-feedback {
  display: flex;
}

/*
 Checkbox and Radio box specific classes
*/
input[type='checkbox'],
input[type='radio'],
input[type='range'],
:has(input[type='checkbox']) {
  ~ .invalid-feedback,
  ~ .valid-feedback {
    margin-top: 1px;
    padding: tokens.get('post-validation-group-padding-block-text');

    &::before {
      margin-top: -1px;
      height: tokens.get('post-validation-group-icon-size');
      width: tokens.get('post-validation-group-icon-size');
      display: inline-block;
      margin-inline-end: tokens.get('post-validation-group-gap-inline');
      background-color: currentColor;
      color: currentColor;
      content: '';
    }
  }

  ~ .invalid-feedback::before {
    @include icon-mixin.icon('error');
  }

  ~ .valid-feedback::before {
    @include icon-mixin.icon('success');
  }
}

// Special for Card Control
