@use 'form-check';
@use '../variables/color';
@use '../variables/animation';
@use '../mixins/color' as color-mx;
@use '../mixins/icons' as icons-mx;
@use '../mixins/utilities' as utility-mx;
@use './../placeholders/form-check' as form-check-ph;
@use '../tokens/components';
@use '../functions/tokens';

tokens.$default-map: components.$post-radio-button;

fieldset > .form-check:not(:last-of-type) {
  margin-bottom: tokens.get('radio-button-gap-block-group');
}

.form-check:has(input[type='radio']) {
  &:has(> input:not(:only-child)) {
    @include utility-mx.focus-style();
  }
  padding-block: tokens.get('radio-button-padding-block-single', components.$post-radio-button);

  > input {
    @extend %radio-button;
  }

  &:only-child {
    @include utility-mx.focus-style() {
      border-radius: tokens.get(
        'radio-button-icon-border-radius-round',
        components.$post-radio-button
      );
    }
  }
}
