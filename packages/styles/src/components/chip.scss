@forward './../variables/options';

@use './../variables/components/chip';
@use './../variables/components/forms';
@use './../variables/components/form-check';
@use './../variables/color';
@use './../mixins/utilities';
@use './../mixins/chip' as chip-mx;
@use './../mixins/icons' as icons-mx;
@use './../placeholders/chip' as chip-ph;
@use './../functions/icons' as icons-fn;

.chip {
  &-dismissible {
    @extend %chip;
    position: relative;

    &::before,
    &::after {
      content: '';
      display: inline-block;
      flex: 0 0 auto;
      height: chip.$chip-close-button-height;
      width: chip.$chip-close-button-height;
      transition: chip.$chip-transition;
    }

    &::after {
      @include icons-mx.icon(chip.$chip-close-button-icon);
      position: absolute;
      top: 50%;
      left: chip.$chip-padding-x;
      transform: translateY(-50%);
    }

    &::before {
      border-radius: chip.$chip-close-button-border-radius;
    }

    &:hover::before {
      background-color: chip.$chip-hover-bg;
    }

    // set the focus ring on the close button only
    @include utilities.focus-style-none();
    @include utilities.focus-style('::before') {
      background-color: chip.$chip-hover-bg;
    }

    @include utilities.disabled-style($text-selector: '> .chip-text');
  }

  &-filter {
    &-label {
      @extend %chip;
      cursor: pointer;
    }

    &-input {
      &:checked {
        + .chip-filter-label {
          @include chip-mx.chip-active-state;
        }

        &:disabled + .chip-filter-label {
          background-color: chip.$chip-disabled-active-bg;
        }
      }

      &:not(:checked) + .chip-filter-label:hover {
        @include chip-mx.chip-hover-state;
      }

      @include utilities.visuallyhidden;
      @include utilities.focus-style('+ .chip-filter-label');
      @include utilities.disabled-style('+ .chip-filter-label', $text-selector: '> .chip-text') {
        background-color: chip.$chip-disabled-bg;
      }
    }
  }
}

.chip-sm {
  &.chip-dismissible {
    @extend %chip-sm;

    &::before,
    &::after {
      height: chip.$chip-close-button-height-sm;
      width: chip.$chip-close-button-height-sm;
    }

    &::after {
      left: chip.$chip-padding-x-sm;
    }
  }

  &.chip-filter > .chip-filter-label {
    @extend %chip-sm;
  }
}

@include utilities.high-contrast-mode() {
  .chip-filter {
    &-input:focus-visible + &-label {
      border-color: Highlight;
      outline-color: Highlight;
    }

    &-input:checked + &-label {
      &:hover {
        @include chip-mx.chip-hover-state;
      }
    }
  }

  button.chip,
  a.chip,
  .chip-filter-label {
    transition: none;
  }
}
