@forward './../variables/options';

@use './../variables/components/chip';
@use './../variables/components/forms';
@use './../variables/components/form-check';
@use './../variables/color';
@use './../mixins/utilities';
@use './../mixins/chip' as chip-mx;
@use './../placeholders/chip' as chip-ph;
@use './../functions/icons' as icons-fn;

.chip {
  &-dismissible {
    @extend %chip;

    @include utilities.focus-style();
    background-color: transparent;

    &:is(:active, .active) {
      @include chip-mx.chip-active-state;

      &:disabled {
        background-color: chip.$chip-disabled-active-bg;
      }
    }

    &:not(:active, .active) {
      @include utilities.not-disabled-focus-hover {
        @include chip-mx.chip-hover-state;
      }
    }

    @include utilities.disabled-style($text-selector: '> .chip-text') {
      background-color: chip.$chip-disabled-bg;
    }
  }

  &-filter {
    &-label {
      @extend %chip;
      cursor: pointer;
    }

    &-input {
      &:checked {
        + .chip-filter-label {
          @include chip-mx.chip-active-state;
        }

        &:disabled + .chip-filter-label {
          background-color: chip.$chip-disabled-active-bg;
        }
      }

      &:not(:checked) + .chip-filter-label:hover {
        @include chip-mx.chip-hover-state;
      }

      @include utilities.visuallyhidden;
      @include utilities.focus-style('+ .chip-filter-label');
      @include utilities.disabled-style('+ .chip-filter-label', $text-selector: '> .chip-text') {
        background-color: chip.$chip-disabled-bg;
      }
    }
  }
}

@include utilities.high-contrast-mode() {
  .chip-filter {
    &-input:focus-visible + &-label {
      border-color: Highlight;
      outline-color: Highlight;
    }

    &-input:checked + &-label {
      &:hover {
        @include chip-mx.chip-hover-state;
      }
    }
  }

  button.chip,
  a.chip,
  .chip-filter-label {
    transition: none;
  }
}
