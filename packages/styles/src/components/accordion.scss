@forward './../variables/options';

@use './../mixins/button' as button-mixins;
@use './../mixins/color' as color-mixins;
@use './../mixins/icons' as icon-mixins;
@use './../mixins/type' as type-mixins;
@use './../mixins/utilities' as utility-mixins;

@use './../variables/components/accordion';

.accordion-item {
  border-block-start: accordion.$accordion-border-width solid accordion.$accordion-border-color;
}

.accordion-header {
  @include type-mixins.font-curve(accordion.$accordion-header-font-curve);
  font-weight: accordion.$accordion-header-font-weight;
  line-height: accordion.$accordion-header-line-height;
  margin: 0;
}

.accordion-button {
  @include button-mixins.reset-button;

  width: 100%;
  position: relative;
  padding-block: accordion.$accordion-button-padding;
  padding-inline-start: accordion.$accordion-button-padding;
  padding-inline-end: accordion.$accordion-button-padding + accordion.$accordion-icon-size;
  text-align: start;

  &:not(:disabled) {
    cursor: accordion.$accordion-button-cursor;
  }

  &:disabled {
    opacity: accordion.$accordion-button-disabled-opacity;
  }

  &:focus {
    outline: none;
    box-shadow: accordion.$accordion-button-focus-box-shadow;
  }

  &::after {
    @include icon-mixins.icon(accordion.$accordion-icon-name);
    content: '';
    display: block;
    height: accordion.$accordion-icon-size;
    width: accordion.$accordion-icon-size;
    position: absolute;
    inset-inline-end: accordion.$accordion-button-padding;
    inset-block-start: 50%;
    transform: translateY(-50%);
    transition: accordion.$accordion-icon-transition;

    // add border to fix visual issue during rotation
    border: 1px solid rgb(var(--post-bg-rgb, 255, 255, 255));
  }

  &.collapsed::after {
    transform: translateY(-50%) accordion.$accordion-icon-transform;
  }

  > .text-truncate {
    display: block;
  }

  // TODO: find a way to style WHCM within web component
  @include utility-mixins.high-contrast-mode() {
    &:hover,
    &:focus-visible {
      &:not(:disabled) {
        outline: accordion.$accordion-border-width solid Highlight;
      }
    }

    &:disabled {
      opacity: 1 !important;
    }
  }
}

.accordion-body {
  padding: accordion.$accordion-body-padding;
  border-block-start: accordion.$accordion-border-width solid accordion.$accordion-border-color;

  @each $heading-size in (1 2 3 4 5 6) {
    h#{$heading-size},
    .h#{$heading-size} {
      @include type-mixins.font-curve(accordion.$accordion-heading-font-curve);
      margin: accordion.$accordion-heading-margin;
      font-weight: accordion.$accordion-heading-font-weight;
    }
  }
}

.accordion-button,
.accordion-body {
  > :first-child {
    margin-block-start: 0 !important;
  }

  > :last-child {
    margin-block-end: 0 !important;
  }
}
