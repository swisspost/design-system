@forward './../variables/options';

@use './../themes/bootstrap/core' as *;
@use './../themes/bootstrap/card' as bootstrap-card;
@use './../variables/color';
@use './../variables/spacing';
@use './../variables/commons';
@use './../variables/components/card';
@use './../functions/sizing';
@use './../mixins/icons' as icons-mx;
@use './../variables/icons';
@use './../variables/animation';

@use './../functions/tokens';
@use './../tokens/utilities';
@use './../tokens/components';

tokens.$default-map: components.$post-cards;

.card-group {
  margin-top: commons.$border-width;
  margin-left: commons.$border-width;
  box-shadow: tokens.get('card-interactive-elevation');
  border-radius: tokens.get('card-border-radius');
}

.card {
  transition: box-shadow 0.25s;
  color: card.$card-color;
  border-radius: tokens.get('card-border-radius');

  // Add an elevation only if card has an interactive element
  &:has(button, a),
  .interactive-card {
    border: 0;
    box-shadow: tokens.get('card-interactive-elevation');
  }

  // Add a border if card has no interactive element
  &:not(:has(button, a)) {
    border: 1px solid tokens.get('card-non-interactive-stroke');
  }

  .card-header:first-child,
  .list-group:first-child,
  .card-img-top {
    border-top-left-radius: tokens.get('card-border-radius');
    border-top-right-radius: tokens.get('card-border-radius');
  }

  .card-footer:last-child,
  .list-group:last-child,
  .card-img-bottom {
    border-bottom-left-radius: tokens.get('card-border-radius');
    border-bottom-right-radius: tokens.get('card-border-radius');
  }

  .card {
    border-radius: tokens.get('card-nested-border-radius');

    .card-header:first-child,
    .list-group:first-child,
    .card-img-top {
      border-top-left-radius: tokens.get('card-nested-border-radius');
      border-top-right-radius: tokens.get('card-nested-border-radius');
    }

    .card-footer:last-child,
    .list-group:last-child,
    .card-img-bottom {
      border-bottom-left-radius: tokens.get('card-nested-border-radius');
      border-bottom-right-radius: tokens.get('card-nested-border-radius');
    }
  }

  &.product-card,
  &.card-button {
    box-shadow: none;

    &:hover,
    &:focus {
      z-index: 1;
      box-shadow: commons.$box-shadow-lg;
    }
  }

  & + & {
    margin-top: sizing.calculate-single-box-shadow-size(commons.$box-shadow-lg) * 2;
  }

  .list-group {
    margin-block: 0 !important;
  }

  .card-group > & {
    margin-right: commons.$border-width;
    margin-bottom: commons.$border-width;
    box-shadow: none;

    + .card {
      margin-top: 0;
    }
  }

  .list-group-item {
    padding: 1.25rem 1rem;
    border-color: card.$card-border-color;
  }

  .link-icon {
    text-decoration: none;

    post-icon {
      width: 1.5rem;
      height: 1.5rem;
      margin-right: 0.5rem;
    }
  }

  > .list-group + .card-footer,
  .card-body ~ .card-body {
    border-top: 1px solid color.$gray-20;
  }
}

// Card elements have paddings, prevent double spacing by removing
// elements margins
.card-header,
.card-body,
.card-footer,
.list-group-item {
  > *:first-child {
    margin-top: 0;
  }

  > *:last-child {
    margin-bottom: 0;
  }
}

.card-header,
.card-footer,
.card-body {
  padding: 1.25rem 1rem;

  .product-card &,
  .card-button & {
    @include media-breakpoint-down(sm) {
      padding: tokens.get('utility-gap-16', utilities.$post-spacing);
    }

    @include media-breakpoint-between(sm, md) {
      padding: tokens.get('utility-gap-24', utilities.$post-spacing);
    }

    @include media-breakpoint-up(md) {
      padding: tokens.get('utility-gap-32', utilities.$post-spacing);
    }
  }

  .card-white & {
    background: color.$white;
  }
}

.card-header {
  align-items: center;

  > *:not(:last-child) {
    margin-right: 1rem;
  }
}

.product-card {
  text-decoration: none;

  &:hover,
  &:focus {
    color: inherit;
    text-decoration: none;
  }

  .link-icon {
    display: flex;
    align-items: center;
    transition: opacity 250ms;
    opacity: 0.75;

    &:hover,
    &:focus {
      opacity: 1;
    }
  }
}

@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  .card {
    img {
      height: 100%;
    }
  }

  .card-group .card {
    img {
      height: auto;
      max-height: 50%;
    }

    > .card-header,
    > .card-footer {
      flex: 0 0 auto;
    }
  }
}

.card-links {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  padding-right: 0.5rem;
  padding-left: 0.5rem;

  a {
    display: inline-flex;
    align-items: center;
    padding-inline: tokens.get('utility-gap-8', utilities.$post-spacing);
    gap: tokens.get('utility-gap-8', utilities.$post-spacing);
    color: color.$gray-60;
    text-decoration: none;
    -ms-flex-align: center;

    &::before {
      @include icons-mx.icon(3020);
      content: '';
      display: inline-block;
      width: icons.$icon-size-default;
      height: icons.$icon-size-default;
    }

    &:hover,
    &:focus {
      color: color.$black;
    }
  }
}
