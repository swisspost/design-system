@forward './../variables/options';

@use 'sass:map';

@use './../themes/bootstrap/core' as *;

@use './../mixins/notification' as notification-mx;

@use './../variables/breakpoints';
@use './../variables/commons';
@use './../variables/grid';
@use './../variables/components/close';
@use './../variables/components/notification';

.alert {
  @include notification-mx.notification-size(alert);

  &:not(.alert-action) {
    @include notification-mx.notification-body(alert);
  }
}

.alert-heading {
  @include notification-mx.notification-heading(alert);
}

.alert-dismissible {
  @include notification-mx.notification-dismissible(alert);
}

.alert-action {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: notification.$notification-gap;

  > .alert-content {
    flex: 1 1 auto;
    @include notification-mx.notification-body(alert);
  }

  > .alert-buttons {
    flex: 0 0 auto;
    display: flex;
    align-items: center;
    gap: notification.$notification-buttons-gap;
  }

  @include media-breakpoint-up(md) {
    &.alert-dismissible > .btn-close {
      inset-block-start: calc(50% - #{0.5 * close.$close-size});
    }
  }

  @include media-breakpoint-down(md) {
    flex-direction: column;
    align-items: stretch;
    padding-inline: map.get(notification.$notification-padding-x-map, alert);

    > .alert-content {
      $icon-size: map.get(notification.$notification-icon-size-map, alert);

      padding-inline-start: notification.$notification-gap + $icon-size;
      padding-inline-end: notification.$notification-gap + close.$close-size;
    }

    &.no-icon > .alert-content {
      padding-inline-start: 0;
    }

    > .alert-buttons {
      display: flex;

      > .btn,
      > ::slotted(.btn) {
        flex: 1 0 0;
        width: 100%;
      }

      > .btn:first-child,
      > ::slotted(.btn:first-child) {
        margin-inline-start: 0;
      }
    }
  }
}

.alert-fixed-bottom {
  position: fixed;
  inset-block-end: 0;
  inset-inline-start: 0;
  inset-inline-end: 0;
  margin-bottom: 0;
  border-radius: 0;
  z-index: commons.$zindex-fixed;
}

@each $name, $color, $icon in notification.$notification-variants {
  .alert-#{$name} {
    @include notification-mx.notification-variant($color, $icon);
  }
}
