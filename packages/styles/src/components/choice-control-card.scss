@use '../variables/color';
@use '../variables/commons';
@use '../variables/spacing';
@use '../mixins/utilities';

.radio-button-card,
.checkbox-button-card {
  --post-card-select--hover-bg: #{color.$gray-10};

  position: relative;
  display: flex;
  gap: 0 spacing.$size-mini;

  width: 100%;

  color: color.$gray-80;
  background-color: color.$white;
  border: 2px solid color.$gray-60;
  border-radius: commons.$border-radius;
  padding: spacing.$size-regular;
  transition:
    color 100ms ease-in-out,
    background-color 100ms ease-in-out,
    border-color 100ms ease-in-out;

  // Checked
  &:where(:has(input:checked), .checked) {
    --post-card-select--hover-bg: #{color.$yellow};
    background-color: color.$yellow;
    border-color: color.$gray-60;

    input {
      background-color: color.$white !important;
    }
  }

  // Focus
  &:where(:has(input:focus-visible), .focused) {
    background-color: var(--post-card-select--hover-bg);
    outline: 2px solid color.$black;
    outline-offset: 2px;
    border-color: color.$black;

    input {
      border-color: color.$black;
    }
  }

  // Hover
  &:where(:hover:not(:has(input:disabled)), :hover:not(.disabled)) {
    border-color: color.$black;
    color: color.$black;
    background-color: var(--post-card-select--hover-bg);

    input {
      border-color: color.$black;
    }

    @include utilities.high-contrast-mode() {
      border-color: Highlight;
      transition: none;
    }
  }

  // Disabled
  &:has(input:disabled),
  &.disabled {
    border-color: color.$gray-20;
    color: color.$gray-40 !important;

    > * {
      cursor: default;
    }
  }

  &:has(input:disabled:checked),
  &.disabled.checked {
    background-color: color.$gray-10;
  }

  // Error
  &:has(input[aria-invalid]),
  &:has(input.is-invalid),
  &.is-invalid {
    color: color.$error;
    border-color: color.$error;

    ~ .invalid-feedback {
      display: block;
    }
  }

  &:last-child {
    margin-bottom: 0;
  }

  > * {
    cursor: pointer;
  }

  post-icon {
    width: 2em;
    height: 2em;
    margin-left: spacing.$size-mini;
    pointer-events: none;
  }

  input {
    border-color: color.$gray-80;
    background-color: color.$white;
    transition: border-color 100ms ease-in-out;
    grid-column: 1 / 2;

    &:focus {
      box-shadow: none !important;
    }
  }

  .form-check-label {
    padding-left: 0;

    &::before {
      // This spans up the click area of the label to the whole
      // card in order to make it clickable natively.
      content: '';
      position: absolute;
      inset: -2px;
    }

    span {
      // Lift spans above the before element to make them selectable
      position: relative;
    }
  }

  input,
  .form-check-label {
    margin-block: 0.25rem;
  }

  // Align input and label if there is an icon
  &:has(post-icon) {
    input,
    .form-check-label {
      margin-top: 0.25rem;
    }
  }
}
