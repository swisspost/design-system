@use './../themes/bootstrap/core' as *;

@use './../variables/animation';
@use './../mixins/utilities' as utilities-mx;

@use '../functions/tokens';
@use '../tokens/components';
@use '../tokens/helpers';

tokens.$default-map: components.$post-list;

// Base class
.list-group {
  background-color: tokens.get('list-bg');
  list-style: none;
  padding: 0;

  > li {
    border: unset;
    padding: 0;
  }
}

.list-group-link,
.list-group-document,
.list-group-switch {
  display: flex;
  position: relative;
  align-items: flex-start;
  padding-block-start: tokens.get('list-item-padding-block-start');
  padding-block-end: tokens.get('list-item-padding-block-end');
  padding-inline-start: tokens.get('list-item-padding-inline-start');
  padding-inline-end: tokens.get('list-item-padding-inline-end');
  border-radius: tokens.get('focus-border-radius', helpers.$post-focus); // Used for the focus only
  color: tokens.get('list-item-enabled-fg');

  &::after {
    display: block;
    content: '';
    position: absolute;
    inset: auto 0 0;
    border-block-end: tokens.get('list-item-border-width') tokens.get('list-item-border-style')
      tokens.get('list-item-enabled-border');
  }

  &:hover {
    color: tokens.get('list-item-hover-fg');

    &::after {
      border-block-end-color: tokens.get('list-item-hover-border');
    }
  }

  @include utilities-mx.focus-style;
}

.list-group-link,
.list-group-document {
  text-decoration: none;
  gap: tokens.get('list-item-gap-inline');

  > post-icon {
    flex: 0 0 auto;
    padding-block: tokens.get('list-icon-container-padding-block');
    padding-inline: tokens.get('list-icon-container-padding-inline');
    width: calc(
      #{tokens.get('list-icon-size')} + (2 * #{tokens.get('list-icon-container-padding-inline')})
    );
    height: calc(
      #{tokens.get('list-icon-size')} + (2 * #{tokens.get('list-icon-container-padding-block')})
    );

    &:last-child {
      margin-left: auto;
    }
  }
}

.list-group-switch {
  justify-content: space-between;
  margin-bottom: 0;
  flex-wrap: nowrap;

  &:hover .form-check-label {
    color: tokens.get('list-item-hover-fg');
  }

  .form-check-label {
    color: tokens.get('list-item-enabled-fg');
  }

  .form-check-input {
    flex-shrink: 0;
    margin-block: tokens.get('list-switch-padding-block');
  }
}

.list-group-link:hover post-icon,
.list-group-link:focus post-icon {
  transform: translateX(animation.$transition-distance-xsmall);
}

.list-group-link post-icon {
  @include transition(
    transform animation.$transition-time-area-small animation.$transition-easing-default
  );
}
