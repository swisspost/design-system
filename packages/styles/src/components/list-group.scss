@use './../themes/bootstrap/core' as *;

@use './../variables/animation';
@use './../mixins/utilities' as utilities-mx;

@use '../functions/tokens';
@use '../tokens/components';

tokens.$default-map: components.$post-list;

// Base class
.list-group {
  background-color: transparent;
  list-style: none;
  padding: 0;
}

.list-group-item-action {
  &:hover,
  &:focus {
    .list-group-item-right-svg {
      transform: translateX(animation.$transition-distance-xsmall);
    }
  }

  .list-group-item-right-svg {
    @include transition(
      transform animation.$transition-time-area-small animation.$transition-easing-default
    );
  }
}

.list-group-item {
  border: none;
  padding: 0;
  background: transparent;

  > a,
  > div {
    display: flex;
    position: relative;
    padding-block-start: tokens.get('post-list', 'item-padding-block-start');
    padding-block-end: tokens.get('post-list', 'item-padding-block-end');
    padding-inline-start: tokens.get('post-list', 'item-padding-inline-start');
    padding-inline-end: tokens.get('post-list', 'item-padding-inline-end');
    border-radius: tokens.get('post-list', 'item-focus-outline-radius'); // Used for the focus only
    color: tokens.get('post-list', 'item-enabled-fg');

    &::before {
      content: '';
      position: absolute;
      width: 100%;
      background-color: tokens.get('post-list', 'item-enabled-border');
      height: 1px;
      bottom: 0;
      left: 0;
    }

    &:hover {
      border-block-end-color: tokens.get('post-list', 'item-hover-border');
      color: tokens.get('post-list', 'item-hover-fg');
    }
  }

  > div {
    justify-content: space-between;

    .form-check-label {
      color: tokens.get('post-list', 'item-enabled-fg');
    }
  }

  a,
  input,
  div.form-check {
    @include utilities-mx.focus-style(
      null,
      tokens.get('post-list', 'item-focus-outline-offset'),
      tokens.get('post-list', 'item-focus-outline-width'),
      tokens.get('post-list', 'item-focus-outline-color'),
      tokens.get('post-list', 'item-focus-outline-style')
    ) {
    }
  }

  > a {
    align-items: center;
    flex-grow: 1;
    text-decoration: none;
    gap: tokens.get('post-list', 'item-gap-inline');

    > *:last-child {
      margin-left: auto;
    }
  }
}
