@use './../themes/bootstrap/core' as *;

@use './../variables/animation';
@use './../mixins/utilities' as utilities-mx;

@use '../functions/tokens';
@use '../tokens/components';

tokens.$default-map: components.$post-list;

// Base class
.list-group {
  background-color: transparent;
  list-style: none;
  padding: 0;

  > li {
    border: unset;
    padding: 0;
    background: transparent;

    > a,
    .form-check {
      display: flex;
      position: relative;
      padding-block-start: tokens.get('list-item-padding-block-start');
      padding-block-end: tokens.get('list-item-padding-block-end');
      padding-inline-start: tokens.get('list-item-padding-inline-start');
      padding-inline-end: tokens.get('list-item-padding-inline-end');
      border-radius: tokens.get('list-item-focus-outline-radius'); // Used for the focus only
      color: tokens.get('list-item-enabled-fg');

      &::before {
        content: '';
        position: absolute;
        width: 100%;
        height: 1px;
        border-block-end: tokens.get('list-item-border-width') tokens.get('list-item-border-style')
          tokens.get('list-item-enabled-border');
        bottom: 0;
        left: 0;
      }

      &:hover {
        color: tokens.get('list-item-hover-fg');

        &::before {
          border-block-end-color: tokens.get('list-item-hover-border');
        }
      }
    }

    > a {
      align-items: center;
      flex-grow: 1;
      text-decoration: none;
      gap: tokens.get('list-item-gap-inline');

      > *:last-child {
        margin-left: auto;
      }
    }

    .form-check {
      justify-content: space-between;

      &:hover .form-check-label {
        color: tokens.get('list-item-hover-fg');
      }

      .form-check-label {
        color: tokens.get('list-item-enabled-fg');
      }

      > div {
        display: inline-flex;
        padding-block: tokens.get('list-switch-padding-block');
      }
    }

    a,
    div.form-check {
      @include utilities-mx.focus-style(
        null,
        tokens.get('list-item-focus-outline-offset'),
        tokens.get('list-item-focus-outline-width'),
        tokens.get('list-item-focus-outline-color'),
        tokens.get('list-item-focus-outline-style')
      );
    }

    .list-group-link:hover post-icon,
    .list-group-link:focus post-icon {
      transform: translateX(animation.$transition-distance-xsmall);
    }

    .list-group-link post-icon {
      padding-block: tokens.get('list-icon-container-padding-block');
      padding-inline: tokens.get('list-icon-container-padding-inline');

      @include transition(
        transform animation.$transition-time-area-small animation.$transition-easing-default
      );
    }
  }
}
