@forward '../variables/options';

@use 'sass:map';

@use '../lic/bootstrap-license';
@use '../themes/bootstrap/overrides' as *;
@use '../themes/bootstrap/list-group' as bl;

@use '../variables/color';
@use '../variables/spacing';
@use '../variables/type';
@use '../variables/commons';
@use '../variables/animation';
@use '../variables/components/list-group';
@use '../mixins/type' as type-mixins;

// Base class
.list-group {
  background-color: transparent;

  &-box {
    padding-top: map.get(spacing.$post-sizes, 'mini');
    padding-bottom: map.get(spacing.$post-sizes, 'mini');
    box-shadow: commons.$box-shadow;
  }
}

.list-group-item-action {
  @include transition(
    color animation.$transition-time-simple animation.$transition-easing-default,
    background-color animation.$transition-time-simple animation.$transition-easing-default
  );

  &:hover,
  &:focus {
    .list-group-item-right-svg {
      transform: translateX(animation.$transition-distance-xsmall);
    }
  }

  .list-group-item-right-svg {
    @include transition(
      transform animation.$transition-time-area-small animation.$transition-easing-default
    );
  }

  &-minimal,
  &-transparent {
    &:hover,
    &:focus {
      background-color: transparent;
    }
  }

  &-inverted {
    background-color: transparent;

    &:hover,
    &:focus {
      background-color: list-group.$list-group-hover-bg-inverted;
    }
  }
}

.list-group-item {
  display: flex;
  align-content: center;
  align-items: center;
  justify-content: space-between;
  padding-right: map.get(spacing.$post-sizes, 'small-regular');
  padding-left: map.get(spacing.$post-sizes, 'small-regular');
  background-color: transparent;
  font-weight: normal;
  text-decoration: none;

  @include media-breakpoint-up(rg) {
    padding-left: map.get(spacing.$post-sizes, 'large');

    &-minimal {
      padding-left: 0;
    }

    &-transparent {
      padding-right: map.get(spacing.$post-sizes, 'mini');
      padding-left: map.get(spacing.$post-sizes, 'regular');
    }
  }

  @include media-breakpoint-up(lg) {
    &-big {
      padding: map.get(spacing.$post-sizes, 'small-large') map.get(spacing.$post-sizes, 'mini')
        map.get(spacing.$post-sizes, 'small-large') map.get(spacing.$post-sizes, 'regular');
    }
  }

  &-svg {
    flex: 0 0 auto;
  }

  &-left-icon {
    justify-content: flex-start;
    padding-left: map.get(spacing.$post-sizes, 'mini');

    @include media-breakpoint-up(rg) {
      padding-left: map.get(spacing.$post-sizes, 'small-regular');
    }

    .list-group-item-svg {
      margin-right: map.get(spacing.$post-sizes, 'mini');

      @include media-breakpoint-up(rg) {
        margin-right: map.get(spacing.$post-sizes, 'small-regular');
      }
    }
  }

  &-no-border {
    border: 0;
  }

  &-minimal {
    @include type-mixins.font-curve('bigger-regular');
    padding-right: 0;
    padding-left: 0;
  }

  &-transparent {
    background-color: transparent;

    @include media-breakpoint-up(rg) {
      padding-left: map.get(spacing.$post-sizes, 'regular');
    }

    &:hover {
      background-color: transparent;
    }
  }

  &-white {
    background-color: transparent;
    color: color.$white;

    &:hover {
      background-color: transparent;
      color: rgba(var(--white-rgb), 0.8);
    }
  }
}

.list-group-item {
  border-collapse: collapse;
  border-right: 0;
  border-left: 0;

  .list-group &:last-child {
    border-bottom: 0;
  }
}

.list-group-white {
  .list-group-item {
    border: 0;
    border-top: list-group.$list-group-border-width solid rgba(var(--white-rgb), 0.2);
  }
}
