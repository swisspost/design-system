/*!
 * Copyright 2021 by Swiss Post, Information Technology
 */

@use './../variables/spacing';
@use './../variables/components/pagination';
@use './../variables/components/datatable';
@use './../variables/components/forms';

@use './../mixins/button' as button-mx;
@use './../mixins/icons' as icons-mx;
@use './../mixins/utilities' as utilities-mx;

@use './../placeholders/text';

@use '../functions/tokens';
@use '../tokens/utilities';

tokens.$default-map: utilities.$post-spacing;

.datatable-header-cell {
  padding: datatable.$datatable-cell-padding;
  font-weight: datatable.$datatable-header-font-weight;

  .datatable-header[ng-reflect-sorts*='object'] &:not(.sort-active) {
    color: datatable.$datatable-header-unsorted-color;
  }

  &-template-wrap {
    display: flex;
    align-items: center;
  }

  &-wrapper {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .datatable-flush & {
    border-bottom: datatable.$datatable-flush-border;
  }
}

.datatable-body-cell {
  display: flex !important;
  align-items: center;
  margin-bottom: datatable.$datatable-cell-margin;
  padding: datatable.$datatable-cell-padding;
  background-color: datatable.$datatable-cell-bg;

  .datatable-spaced-cells & {
    margin-right: datatable.$datatable-cell-margin;
  }

  .datatable-inverted & {
    background-color: datatable.$datatable-inverted-cell-bg;
  }

  .datatable-flush &,
  .datatable-striped-rows .datatable-row-odd & {
    margin: 0;
    background-color: transparent;
  }

  .datatable-flush & {
    border-bottom: datatable.$datatable-flush-border;
  }
}

.ngx-datatable .sort-btn {
  flex: 0 0 auto;
  width: tokens.get('utility-gap-16');
  height: tokens.get('utility-gap-16');
  margin-left: tokens.get('utility-gap-8');

  &.datatable-icon-sort-unset {
    @include icons-mx.icon(2127);
  }

  &.datatable-icon-up,
  &.datatable-icon-down {
    @include icons-mx.icon(2112);
  }

  &.datatable-icon-down {
    transform: rotate(180deg);
  }
}

.datatable-button-cell {
  align-items: stretch;
  padding: 0;

  .datatable-body-cell-label {
    display: flex;
    flex-grow: 1;
    align-items: stretch;
  }

  .datatable-button {
    display: flex;
    align-items: center;
    @include button-mx.reset-button;
    width: datatable.$datatable-button-width;
    height: datatable.$datatable-button-height;
    margin: datatable.$datatable-button-margin;
    padding: datatable.$datatable-cell-padding;
    border-radius: 0;

    &:focus {
      outline: 0;
      box-shadow: datatable.$datatable-button-focus-shadow;
    }
  }
}

.datatable-paginated-footer {
  display: flex;
  flex: 1 0 auto;
  align-items: center;
  justify-content: flex-end;
  padding: datatable.$datatable-footer-padding;

  .datatable-row-count-label {
    @extend %font-curve-small;
    flex: 0 0 auto;
    margin: 0 tokens.get('utility-gap-8') 0 0;
  }

  .datatable-row-count-input {
    @extend %font-curve-small;
    flex: 0 0 datatable.$datatable-row-count-input-width;
    height: pagination.$pagination-height;
    padding-top: 0;
    padding-bottom: 0;

    + .datatable-pagination {
      padding-left: tokens.get('utility-gap-8');
      border-left: datatable.$datatable-footer-separator;
    }
  }

  .datatable-pagination {
    flex: 0 0 auto;

    .pagination {
      margin-bottom: 0;
    }
  }

  .datatable-loader {
    margin: auto;
  }
}

// Styles for loading indicator on datatables
// Provided by: https://github.com/swimlane/ngx-datatable/issues/881#issuecomment-929701938
.progress-linear {
  display: block;
  position: sticky;
  top: 0;
  width: 100%;
  height: datatable.$datatable-progressbar-height;
  margin: 0;
  padding: 0;

  .container {
    display: block;
    position: relative;
    width: 100%;
    height: 5px;
    overflow: hidden;
    transform: translate(0, 0) scale(1, 1);
    background-color: datatable.$datatable-progressbar-backgroundcolor;

    .bar {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 5px;
      transition: all 0.2s linear;
      animation: query 0.8s infinite cubic-bezier(0.39, 0.575, 0.565, 1);
      background-color: datatable.$datatable-progressbar-activecolor;
    }
  }
}

@keyframes query {
  0% {
    transform: translateX(35%) scale(0.3, 1);
    opacity: 1;
  }

  100% {
    transform: translateX(-50%) scale(0, 1);
    opacity: 0;
  }
}

@include utilities-mx.high-contrast-mode() {
  .ngx-datatable {
    .datatable-header-cell,
    .datatable-body-cell,
    .datatable-footer-cell {
      margin: 0;
      background-color: Canvas;
      border: 0 none;
      color: CanvasText;
    }

    .datatable-button {
      &:hover,
      &:focus-visible {
        outline: tokens.get('utility-gap-2') solid Highlight;
        outline-offset: calc(tokens.get('utility-gap-2') * -1);
      }
    }

    // line between y-axis (default)
    &:not(.datatable-spaced-cells) {
      .datatable-row-wrapper {
        .datatable-body-cell {
          border-top: tokens.get('utility-gap-2') solid CanvasText;
        }

        &:last-child {
          .datatable-body-cell {
            border-bottom: tokens.get('utility-gap-2') solid CanvasText;
          }
        }
      }
    }

    // line between x- and y-axis
    &.datatable-spaced-cells {
      .datatable-row-wrapper {
        .datatable-body-cell {
          border-top: tokens.get('utility-gap-2') solid CanvasText;
          border-left: tokens.get('utility-gap-2') solid CanvasText;

          &:last-child {
            border-right: tokens.get('utility-gap-2') solid CanvasText;
          }
        }

        &:last-child {
          .datatable-body-cell {
            border-bottom: tokens.get('utility-gap-2') solid CanvasText;
          }
        }
      }
    }
  }
}
