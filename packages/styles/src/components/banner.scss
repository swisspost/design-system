@forward './../variables/options';

@use 'sass:map';

@use './../themes/bootstrap/core' as *;

@use './../mixins/notification' as notification-mx;

@use './../variables/breakpoints';
@use './../variables/commons';
@use './../variables/grid';
@use './../variables/components/close';
@use './../variables/components/notification';
@use '../tokens/components';
@use '../functions/tokens';

tokens.$default-map: components.$post-banner;

.banner,
.alert {
  $default-variant: nth(notification.$notification-variants, 1);

  border-style: tokens.get('banner-border-style');
  border-width: tokens.get('banner-border-width');
  @include notification-mx.notification-size(alert);

  /* stylelint-disable-next-line scss/selector-no-redundant-nesting-selector */
  & {
    // Set the neutral banner as the default color
    @include notification-mx.notification-variant(
      nth($default-variant, 2),
      nth($default-variant, 3),
      nth($default-variant, 4),
      nth($default-variant, 5),
      nth($default-variant, 6)
    );
  }

  &:not(.banner-action):not(.alert-action) {
    @include notification-mx.notification-body(alert);
  }
}

// Dialog container
.banner-container {
  border: none;
  background-color: transparent;
}

.banner-dismissible,
.alert-dismissible {
  @include notification-mx.notification-dismissible(alert);
}

.banner-buttons,
.alert-buttons {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  margin-block-start: tokens.get('banner-actions-margin-top');
  gap: tokens.get('banner-actions-gap');
}

.banner-action,
.alert-action {
  > .banner-content,
  > .alert-content {
    @include notification-mx.notification-body(alert);
  }

  @include media-breakpoint-down(md) {
    flex-direction: column;
    align-items: stretch;

    > .banner-content,
    > .alert-content {
      padding-inline-start: tokens.get('banner-gap') + tokens.get('banner-icon-size');
      padding-inline-end: tokens.get('banner-gap') + close.$close-size;
    }

    &.no-icon > .banner-content,
    &.no-icon > .alert-content {
      padding-inline-start: 0;
    }

    > .banner-buttons,
    > .alert-buttons {
      display: flex;

      > .btn,
      > ::slotted(.btn) {
        flex: 1 0 0;
        width: 100%;
      }

      > .btn:first-child,
      > ::slotted(.btn:first-child) {
        margin-inline-start: 0;
      }
    }
  }
}

@each $name, $color, $icon, $border-color, $icon-color,
  $scheme in notification.$notification-variants
{
  .banner-#{$name},
  .alert-#{$name} {
    @include notification-mx.notification-variant(
      $color,
      $icon,
      $border-color,
      $icon-color,
      $scheme
    );
  }
}
