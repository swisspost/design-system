@use './../mixins/utilities' as utilities-mx;
@use './../variables/color';
@use './../variables/spacing';
@use './../variables/components/button';
@use './../variables/components/forms';

@use '../functions/tokens';
@use '../tokens/utilities';

.btn-group {
  max-width: 100%;
  flex-wrap: wrap;
  row-gap: tokens.get('utility-gap-4', utilities.$post-spacing);
  padding-inline-start: button.$btn-border-width;
  border-radius: var(--post-device-border-radius-round);
  position: relative;
  display: inline-flex;
  vertical-align: middle;

  & > :not(.btn-check:first-child) + .btn,
  & > .btn-group:not(:first-child) {
    margin-left: calc(2px * -1);
  }

  & > .btn:not(:last-child):not(.dropdown-toggle),
  & > .btn.dropdown-toggle-split:first-child,
  & > .btn-group:not(:last-child) > .btn {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  & > .btn:nth-child(n + 3),
  & > :not(.btn-check) + .btn,
  & > .btn-group:not(:first-child) > .btn {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  & > .btn-check:checked + .btn,
  & > .btn-check:focus + .btn,
  & > .btn:hover,
  & > .btn:focus,
  & > .btn:active,
  & > .btn.active {
    z-index: 1;
  }

  > .btn {
    white-space: normal;
    cursor: pointer;
    flex: 0 1 auto;
    margin-inline-start: -1 * button.$btn-border-width;
  }

  > .btn-secondary {
    border-color: color.$gray-20;
  }

  > .btn-secondary.active,
  > .btn-check:checked + .btn-secondary {
    background-color: color.$yellow;
    color: color.$black;

    @include utilities-mx.high-contrast-mode() {
      background-color: Highlight;
    }
  }
}

.btn-check {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  pointer-events: none;
  @include utilities-mx.focus-style('+ .btn');
}
