@forward './../variables/options';

@use './../functions/tokens';
@use './../tokens/components';
@use './../tokens/elements';

@use './../mixins/forms' as forms-mx;
@use './../mixins/utilities';
@use './../variables/components/forms';

tokens.$default-map: components.$post-text-input;

input.form-control {
  display: block;
  width: 100%;
  font-family: inherit;
  appearance: none; // Fix appearance for date inputs in Safari
  background-clip: padding-box;
  border: tokens.get('input-border-width') tokens.get('input-border-style-default')
    tokens.get('input-color-enabled-border');
  position: relative;
  border-radius: tokens.get('input-border-radius-surface');
  background-color: tokens.get('input-color-enabled-bg');
  color: tokens.get('input-color-enabled-fg');
  padding-inline-start: tokens.get('input-padding-inline-start');
  padding-inline-end: tokens.get('input-padding-inline-end');
  padding-block: tokens.get('input-standalone-padding-block');
  height: tokens.get('input-sizing-height');

  &:focus {
    border-color: tokens.get('input-color-selected-border');
    background-color: tokens.get('input-color-selected-bg');
    color: tokens.get('input-color-selected-fg');

    @include utilities.focus-style;

    @include utilities.high-contrast-mode {
      border-color: FieldText !important; // On blink browser valid and invalid border colors are converted to Highlight color
    }
  }

  &:not(:disabled) {
    &:hover,
    &:focus {
      @include utilities.high-contrast-mode {
        border-color: FieldText;
      }
    }

    &:hover {
      border-color: tokens.get('input-color-hover-border');
      background-color: tokens.get('input-color-hover-bg');

      @include utilities.high-contrast-mode {
        border-color: Highlight;
      }
    }
  }

  &[readonly]:not(:disabled) {
    border-color: tokens.get('input-color-enabled-border');
    background-color: tokens.get('input-color-enabled-bg');
  }

  &[type='file'] {
    overflow: hidden;
    position: relative;

    &:disabled {
      @include utilities.high-contrast-mode {
        color: GrayText; // Needed for the button on blink browser, even if we define it on .form-control:disabled
        border-color: GrayText;
      }
    }
    // File input buttons theming
    &::file-selector-button {
      padding-block: tokens.get('input-standalone-padding-block');
      padding-inline-start: tokens.get('input-padding-inline-start');
      padding-inline-end: tokens.get('input-padding-inline-end');
      margin-block: calc(#{tokens.get('input-standalone-padding-block')} * -1);
      color: tokens.get('input-color-enabled-fg');
      pointer-events: none;
      border-color: inherit;
      border-style: solid;
      border-width: 0;
      border-inline-end-width: tokens.get('input-border-width');
      border-radius: 0;
      display: block;
      position: absolute;
      top: 0;
      bottom: 0;
      right: 0;
      margin-inline: 0;
      height: auto;
      background-color: inherit;
      border-right: 0 none;
      border-left: inherit;
    }

    // Fix Safari cutoff when change the initial position of the selector button.
    /* stylelint-disable-next-line */
    @supports (background: -webkit-named-image(i)) {
      &::file-selector-button {
        display: initial;
        position: initial;
        margin-inline: 0;
        padding-inline: 0;
        width: 0;
        border: 0 none;
      }

      &::after {
        display: flex;
        align-items: center;
        content: 'Choose File';
        position: absolute;
        top: 0;
        bottom: 0;
        right: 0;
        z-index: 2;
        padding-inline: tokens.get('input-padding-inline-start');
        background-color: inherit;
        border-left: inherit;
        text-align: center;

        [lang='de'] & {
          content: 'Datei auswählen';
        }

        [lang='fr'] & {
          content: 'Choisir un fichier';
        }

        [lang='it'] & {
          content: 'Scegli file';
        }
      }

      &[multiple] {
        &::after {
          content: 'Choose Files';

          [lang='de'] & {
            content: 'Dateien auswählen';
          }

          [lang='fr'] & {
            content: 'Choisir des fichiers';
          }
        }
      }
    }

    &:not(:disabled):not([readonly]) {
      cursor: pointer;
    }
  }

  &::placeholder {
    color: tokens.get('input-color-enabled-fg');
    opacity: 1;
  }

  &:disabled {
    color: tokens.get('input-color-disabled-fg');
    background-color: tokens.get('input-color-disabled-bg');
    border-color: tokens.get('input-color-disabled-border');
    border-style: tokens.get('input-border-style-disabled');
    opacity: 1;

    &::placeholder {
      color: tokens.get('input-color-disabled-fg');
      opacity: 1;
    }
  }

  &:hover:not(:disabled):not([readonly])::file-selector-button {
    background-color: tokens.get('input-color-hover-bg');
  }

  &.is-valid,
  &.is-invalid {
    &:not(:disabled) {
      background-size: tokens.get('input-sizing-icon');
      background-position: center right tokens.get('input-validation-icon-position-inline-end');
      background-repeat: no-repeat;
      padding-inline-end: calc(
        #{tokens.get('input-padding-inline-end')} + #{tokens.get(
            'input-validation-icon-position-inline-end'
          )} + #{tokens.get('input-sizing-icon')}
      );
    }
  }

  @include forms-mx.validation-icons;
}

.form-label:has(+ input.form-control[disabled]) {
  color: tokens.get('input-color-disabled-fg');
}

.form-floating {
  position: relative;

  > input.form-control ~ label {
    position: absolute;
    z-index: 2;
    text-align: start;
    pointer-events: none;
    display: block;
    top: tokens.get('input-border-width');
    left: tokens.get('input-border-width');
    margin: 0;
    padding-inline-start: tokens.get('input-label-empty-padding-inline-start');
    padding-inline-end: tokens.get('input-label-empty-padding-inline-end');
    padding-block-start: tokens.get('input-label-empty-padding-block-start');
    border: 0;
    color: tokens.get('input-color-enabled-fg');
    width: auto;
    height: auto;
    max-width: calc(100% - (#{tokens.get('input-border-width')} * 2));
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    transition:
      padding-block-start 0.2s ease-in-out,
      font-size 0.2s ease-in-out;
    background-color: tokens.get('input-color-enabled-bg');
  }

  > input.form-control {
    min-height: tokens.get('input-sizing-height');

    &::placeholder {
      color: transparent;
    }

    &:focus,
    &:not(:placeholder-shown) {
      padding-block-start: tokens.get('input-padding-block-start');
      padding-block-end: tokens.get('input-padding-block-end');

      ~ label {
        color: tokens.get('input-color-selected-fg');
        font-size: tokens.get('input-label-filled-font-size');
        padding-block-start: tokens.get('input-label-filled-padding-block-start');
      }

      &:not(:hover):not(:disabled) {
        ~ label {
          color: tokens.get('input-color-selected-fg');
        }
      }
    }

    @include forms-mx.placeholder {
      opacity: 0;
    }

    &:focus {
      @include forms-mx.placeholder {
        color: tokens.get('input-color-helptext-fg');
        opacity: 1;
      }
    }

    &:disabled ~ label {
      color: tokens.get('input-color-disabled-fg');
      background-color: tokens.get('input-color-disabled-bg');
    }

    &:not(:disabled):hover ~ label {
      color: tokens.get('input-color-hover-fg');
      background-color: tokens.get('input-color-hover-bg');
    }

    &[type='file'] {
      &:focus,
      &:not(:placeholder-shown) {
        padding-block-start: calc(#{tokens.get('input-padding-block-start')} * 1.33);
      }
    }
  }

  > input.form-control:-webkit-autofill {
    padding-block-start: tokens.get('input-padding-block-start');
    padding-block-end: tokens.get('input-padding-block-end');

    ~ label {
      color: tokens.get('input-color-selected-fg');
      font-size: tokens.get('input-label-filled-font-size');
      background-color: tokens.get('input-color-selected-bg');
    }
  }

  @include utilities.high-contrast-mode() {
    > input {
      @include forms-mx.placeholder() {
        opacity: 0;
      }
    }
  }
}
