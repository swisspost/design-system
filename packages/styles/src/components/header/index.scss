@use '../../mixins/media';
@use '../../mixins/utilities';
@use '../../variables/color';
@use '../../functions/tokens';
@use '../../tokens/elements';
@use '../../mixins/button' as button-mx;
@use 'mixins' as *;

tokens.$default-map: elements.$post-link;

:root:has(post-header) {
  --post-header-expanded-height: calc(
    var(--post-global-header-height) + var(--post-local-header-height)
  );
  --post-header-reduced-height: calc(
    var(--post-global-header-reduced-height) + var(--post-main-navigation-height)
  );
  --post-header-height: calc(
    var(--post-header-expanded-height) - min(
        var(--post-header-scroll-top, 0px),
        calc(var(--post-header-expanded-height) - var(--post-header-reduced-height))
      )
  );

  @include media.min(lg) {
    --post-global-header-height: 72px;
    --post-global-header-reduced-height: 24px;
    --post-main-navigation-height: 56px;
    --post-local-header-height: 112px;
  }

  @include media.max(lg) {
    --post-header-reduced-height: var(--post-header-expanded-height);
    --post-global-header-height: 64px;
    --post-global-header-reduced-height: var(--post-global-header-height);
    --post-local-header-height: 48px;
    --post-main-navigation-height: 0px; /* stylelint-disable-line length-zero-no-unit */ /* needed for calculation */
  }

  @include media.min(md) {
    --post-local-header-min-height: 56px;
  }

  @include media.max(md) {
    --post-local-header-min-height: 48px;
  }

  &:not(:has(post-header [slot='title'])) {
    --post-local-header-height: var(--post-main-navigation-height) !important;
  }
}

body:has(post-header) {
  scroll-padding-top: var(--post-header-height);
}

[data-post-scroll-locked] {
  overflow: hidden !important;
}

post-header {
  height: var(--post-header-height);

  &:not(:defined),
  &:not([data-hydrated]) {
    display: block;
  }

  ul[slot='meta-navigation'] {
    @include media.min(lg) {
      gap: 4px;
    }

    @include media.max(lg) {
      flex-direction: column;
      gap: 0;

      a,
      button {
        justify-content: space-between;
        border-radius: 0;
        @include mobile-header-interactive;

        @include utilities.focus-style-custom {
          border-radius: 4px;
        }
      }
    }

    @include media.max(sm) {
      a,
      button {
        font-size: 14px;
      }
    }
  }

  [slot='title'] {
    margin: 0;
    flex-shrink: 10;
    z-index: 3;
    font-weight: 900;

    @include media.min(sm) {
      margin-inline-start: 12px;
    }

    @include media.max(sm) {
      margin-inline-start: 8px;
    }

    @include media.min(lg) {
      font-size: 28px;
      line-height: 34px;
    }

    @include media.max(lg) {
      font-size: 20px;
      max-width: calc(100vw - 8px - 16px);
    }
  }

  button:not(post-mainnavigation *, post-language-switch *) {
    @include button-mx.reset-button;

    &:hover {
      color: tokens.get('link-hover-fg');
    }
  }

  a,
  button,
  post-togglebutton {
    &:not(post-mainnavigation *, post-language-switch *) {
      @include subsidiary-header-interactive;

      post-icon {
        height: 24px;
        width: 24px;
      }

      @include media.max(sm) {
        padding: 8px;

        .visually-hidden-sm {
          @include utilities.visuallyhidden;
        }
      }
    }
  }

  button,
  a:not(post-mainnavigation *, post-language-switch *) {
    display: flex;

    @include media.max(sm) {
      padding: 4px 10px;
    }
  }

  a.selected,
  post-togglebutton[aria-pressed='true'] {
    &:not(post-mainnavigation *) {
      color: color.$white;
      background: #050400;
    }
  }

  post-togglebutton {
    @include utilities.high-contrast-mode() {
      background-color: ButtonFace !important;
      border: 1px solid ButtonBorder !important;
      color: ButtonText !important;

      &:hover {
        background-color: Highlight !important;

        post-icon {
          color: HighlightText;
        }
      }
    }
  }
}
