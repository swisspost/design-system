@use '../../functions/tokens';
@use '../../mixins/button';
@use '../../mixins/icons';
@use '../../mixins/media';
@use '../../mixins/utilities';
@use '../../placeholders/button' as button-ph;

/**
 selects all slotted controls
 */
@mixin controls-selector() {
  &:where(ul) > li > a,
  &:where(a, post-togglebutton) {
    @content;
  }
}

/**
 default styles for header controls
 */
@mixin header-control() {
  @extend %btn;
  display: flex;
  border: unset;
  padding: 0.25rem 0.625rem;
  gap: 0.35rem;
  line-height: 1.5;
  font-size: 1rem;
  font-weight: 400;

  > post-icon {
    width: 1em;
    height: 1em;
  }

  @include button.button-variant-def('enabled', 'tertiary');

  &:disabled {
    @include button.button-variant-def('disabled', 'tertiary');
  }

  @include utilities.not-disabled-hover() {
    @include button.button-variant-def('hover', 'tertiary');
  }
}

/**
 active styles for header controls
 */
@mixin header-control-active() {
  box-shadow: tokens.get('button-elevation');

  @include button.button-variant-def('enabled', 'primary');

  &:disabled {
    @include button.button-variant-def('disabled', 'primary');
  }

  @include utilities.not-disabled-hover() {
    @include button.button-variant-def('hover', 'primary');
  }
}

/**
 styles for controls that remain in the header on mobile and tablet
 */
@mixin mobile-header-control() {
  @include media.only(mobile) {
    padding: 0.5rem;

    > :not(post-icon) {
      display: none;
    }

    > post-icon {
      font-size: 1.5rem;
    }
  }
}

/**
 styles for list of controls on mobile and tablet
 */
@mixin mobile-control-list() {
  @include media.max(desktop) {
    flex-direction: column;

    > li > a {
      position: relative;
      flex-direction: row-reverse;
      justify-content: flex-end;
      border-radius: 0;

      @include media.only(mobile) {
        padding: 0.5rem;
        gap: 0.5rem;
        font-size: 0.875rem;

        > post-icon {
          font-size: 1rem;
        }
      }

      @include media.only(tablet) {
        padding: 0.75rem 0.5rem;
        gap: 1rem;

        > post-icon {
          font-size: 1.5rem;
        }
      }

      &::after {
        content: '';
        background-color: currentColor;
        position: absolute;
        inset-inline: 0;
        inset-block-end: 0;
        height: 1px;
      }

      &:focus-visible {
        border-radius: 0.5rem;
        outline-offset: -1px !important;
      }
    }

    > li:has(+ li:focus-within) > a::after {
      background-color: transparent;
    }
  }
}

@mixin subsidiary-header-interactive() {
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  gap: 6px;
  border-radius: 24px;
  font-size: 16px;
  padding: 3px 10px;
}

@mixin mobile-header-interactive() {
  width: 100%;
  min-width: 100%;
  height: 48px;
  padding-inline: 8px 12px;
  gap: 16px;
  font-weight: 400;
  position: relative;

  @content;

  &::before {
    content: '';
    background-color: #050400;
    bottom: 0;
    width: 100%;
    height: 1px;
    position: absolute;
    left: 0;
  }

  &.active,
  &[aria-current='page'],
  &[aria-expanded='true'] {
    background-color: #050400;
    color: #fff;
  }

  &:hover {
    background-color: #504f4b;
    color: #fff;

    &::before {
      background-color: #504f4b;
    }
  }
}
