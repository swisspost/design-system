@use 'sass:color';
@use 'sass:math';

@forward './../variables/options';

@use './../mixins/forms' as forms-mx;
@use './../mixins/utilities' as utilities-mx;

@use './../functions/sizing';

@use './../variables/type';
@use './../variables/spacing';
@use './../variables/components/forms';
@use './../variables/animation';
@use './../functions/tokens';
@use './../tokens/components';

tokens.$default-map: components.$post-text-input;

// TODO: Since each input/select/textarea will have their own tokens, make sure to separate this file between the 3 corresponding files form-select, forms (should be renamed text-input) and form-textarea
.form-floating {
  position: relative;

  > input.form-control ~ label {
    position: absolute;
    z-index: 2;
    text-align: start;
    pointer-events: none;
    display: block;
    top: tokens.get('input-border-width');
    left: tokens.get('input-border-width');
    margin: 0;
    padding-inline-start: tokens.get('input-label-empty-padding-inline-start');
    padding-inline-end: tokens.get('input-label-empty-padding-inline-end');
    padding-block-start: tokens.get('input-label-empty-padding-block-start');
    border: 0;
    color: tokens.get('input-color-enabled-fg');
    width: auto;
    height: auto;
    max-width: calc(100% - (#{tokens.get('input-border-width')} * 2));
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    transition:
      padding-block-start 0.2s ease-in-out,
      font-size 0.2s ease-in-out;
    background-color: tokens.get('input-color-enabled-bg');
  }

  > input.form-control {
    height: tokens.get('input-sizing-height');
    min-height: tokens.get('input-sizing-height');

    &::placeholder {
      color: transparent;
    }

    &:focus,
    &:not(:placeholder-shown) {
      padding-block-start: tokens.get('input-padding-block-start');
      padding-block-end: tokens.get('input-padding-block-end');

      ~ label {
        color: tokens.get('input-color-selected-fg');
        font-size: tokens.get('input-label-filled-font-size');
        padding-block-start: tokens.get('input-label-filled-padding-block-start');
      }

      &:not(:hover):not(:disabled) {
        ~ label {
          color: tokens.get('input-color-selected-fg');
        }
      }
    }

    @include forms-mx.placeholder {
      opacity: 0;
    }

    &:focus {
      @include forms-mx.placeholder {
        color: tokens.get('input-color-helptext-fg');
        opacity: 1;
      }
    }

    &:disabled ~ label {
      color: tokens.get('input-color-disabled-fg');
      background-color: tokens.get('input-color-disabled-bg');
    }

    &:not(:disabled):hover ~ label {
      color: tokens.get('input-color-hover-fg');
      background-color: tokens.get('input-color-hover-bg');
    }

    &[type='file'] {
      &:focus,
      &:not(:placeholder-shown) {
        padding-block-start: calc(#{tokens.get('input-padding-block-start')} * 1.33);
      }
    }
  }

  // Duplicated because `:-webkit-autofill` invalidates other selectors when grouped
  > input.form-control:-webkit-autofill {
    padding-block-start: tokens.get('input-padding-block-start');
    padding-block-end: tokens.get('input-padding-block-end');

    ~ label {
      color: tokens.get('input-color-selected-fg');
      font-size: tokens.get('input-label-filled-font-size');
      background-color: tokens.get('input-color-selected-bg');
    }
  }

  @include utilities-mx.high-contrast-mode() {
    > input {
      @include forms-mx.placeholder() {
        opacity: 0;
      }
    }
  }
}
