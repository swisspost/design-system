@forward './../variables/options';

@use '../variables/color';
@use '../variables/spacing';
@use '../variables/animation';
@use '../variables/components/form-check';
@use '../mixins/icons' as icons-mx;

.form-check {
  display: flex;
  flex-wrap: wrap;
  row-gap: form-check.$form-check-row-gap;
  column-gap: form-check.$form-check-column-gap;
  margin-bottom: form-check.$form-check-margin-bottom;

  &-inline {
    display: inline-flex;
  }

  &-input,
  &-label {
    color: rgba(var(--post-contrast-color-rgb), 0.8);
    transition: color animation.$transition-base-timing;

    &:not([disabled]) {
      cursor: pointer;
    }

    &:hover:not([disabled]),
    &:hover:not([disabled]) ~ &-label {
      color: var(--post-contrast-color);
    }
  }

  &-input {
    display: inline-flex;
    flex: 0 auto;
    appearance: none;
    background: none;
    height: form-check.$form-check-input-size;
    width: form-check.$form-check-input-size;
    border: form-check.$form-check-input-border-width solid
      rgba(var(--post-contrast-color-rgb), 0.8);

    &:focus {
      outline: none;
      border-color: currentColor;
      box-shadow: form-check.$form-check-input-focus-box-shadow;
    }

    &::after {
      content: '';
      display: block;
      flex: 1;
    }

    &:checked,
    &:indeterminate {
      color: var(--post-contrast-color);
      border-color: var(--post-contrast-color);

      ~ .form-check-label {
        color: var(--post-contrast-color);
      }
    }

    &[type='checkbox'] {
      &:checked::after {
        @include icons-mx.icon(3035);
      }

      &:indeterminate::after {
        @include icons-mx.icon(2039);
      }
    }

    &[type='radio'] {
      border-radius: 50%;

      &:checked::after {
        margin: spacing.$size-micro;
        background-color: currentColor;
        border-radius: inherit;
      }
    }

    &[disabled],
    &[disabled] ~ .form-check-label {
      opacity: 1; // Bootstrap reset
      border-color: rgba(var(--post-contrast-color-rgb), 0.4) !important;
      color: rgba(var(--post-contrast-color-rgb), 0.4) !important;
    }
  }

  &-label {
    flex: 1;
  }
}

.form-switch {
  column-gap: form-check.$form-switch-column-gap;

  .form-check-input {
    height: form-check.$form-switch-height;
    width: form-check.$form-switch-width;
    border: 0;
    border-radius: form-check.$form-switch-width;
    background-image: form-check.$form-switch-background-image;
    background-size: 2 * form-check.$form-switch-width;
    background-position-x: 0;
    transition: background-color animation.$transition-base-timing,
      background-position animation.$transition-base-timing;

    &::after {
      max-width: form-check.$form-switch-height;
      background-color: form-check.$form-switch-color;
      border: form-check.$form-check-input-border-width solid form-check.$form-switch-border-color;
      border-radius: 50%;
      transition: transform animation.$transition-base-timing;
    }

    &:checked {
      background-position-x: form-check.$form-switch-width;

      &::after {
        mask: none;
        background-color: form-check.$form-switch-color;
        border-color: form-check.$form-switch-checked-border-color;
        transform: translateX(2rem);
      }
    }

    &[disabled] {
      background: form-check.$form-switch-disabled-bg;

      &::after {
        border-color: form-check.$form-switch-disabled-border-color;
      }
    }
  }

  &:hover > .form-check-input:not([disabled]) {
    background-color: rgba(var(--post-contrast-color-rgb), 0.1);
  }

  .form-check-label {
    padding-top: form-check.$form-switch-label-padding-top;

    &.order-first {
      flex: 0 auto;
    }
  }
}
