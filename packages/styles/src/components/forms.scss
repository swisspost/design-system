@forward './../variables/options';

@use './../variables/commons';
@use './../variables/components/forms';
@use './../variables/type';
@use './../variables/spacing';
@use './../variables/color';

@use './../functions/sizing';
@use './../functions/tokens';
@use './../tokens/components';

@use './../mixins/utilities';
@use './../mixins/forms' as form-mixins;

@use './../themes/bootstrap/forms/form-text' as bfft;
@use './../themes/bootstrap/forms/form-control' as bffc;
@use './../themes/bootstrap/forms/input-group' as bfig;

tokens.$default-map: components.$post-text-input;

.form-control-rg {
  @include form-mixins.form-rg;
}

.form-control-lg {
  @include form-mixins.form-lg;
}

textarea {
  &.form-control-lg {
    padding-top: spacing.$size-regular;
    padding-bottom: spacing.$size-mini;
    padding-right: spacing.$size-large;
    min-height: (forms.$form-floating-label-font-size * forms.$input-line-height-lg) +
      spacing.$size-regular + spacing.$size-mini + sizing.px-to-rem(forms.$input-border-width * 2);
  }

  &.form-control-sm {
    padding-top: spacing.$size-mini;
    padding-right: spacing.$size-large;
    padding-bottom: 0;
    min-height: (forms.$form-floating-label-font-size-placeholder-sm * forms.$input-line-height-sm) +
      (spacing.$size-mini * 2) + sizing.px-to-rem(forms.$input-border-width * 2);
  }
}

select.form-control-rg:not([size]):not([multiple]) {
  height: forms.$input-height-rg;
}

.form-control-wrapper {
  @include utilities.focus-style {
    border-radius: commons.$border-radius;
  }
}

:not(.form-control-wrapper) > {
  .form-control {
    @include utilities.focus-style {
      border-radius: commons.$border-radius;
    }
  }
}

.form-control {
  position: relative;
  border-radius: tokens.get('input-border-radius-surface');
  border-color: tokens.get('input-color-enabled-stroke');
  background-color: tokens.get('input-color-enabled-bg');
  color: tokens.get('input-color-enabled-fg');
  padding-inline-start: tokens.get('input-spacing-padding-inline-text-start');
  padding-inline-end: tokens.get('input-spacing-padding-inline-text-end');
  padding-block-start: tokens.get('input-spacing-padding-block-text1');
  padding-block-end: tokens.get('input-spacing-padding-block-text1');
  line-height: 30px; //TODO: This should be a token
  font-size: 20px; //TODO Switch to token
  height: 64px; //TODO: Should be token

  &:focus {
    box-shadow: none; // Override bootstrap

    @include utilities.high-contrast-mode {
      border-color: FieldText !important; // On blink browser valid and invalid border colors are converted to Highlight color
    }
  }

  &:not(:disabled) {
    &:hover,
    &:focus {
      @include utilities.high-contrast-mode {
        border-color: FieldText;
      }
    }

    &:hover {
      border-color: color.$black;
      @include utilities.high-contrast-mode {
        border-color: Highlight;
      }
    }
  }

  @include utilities.disabled-style {
    ~ .form-text {
      color: tokens.get('input-color-disabled-fg');
    }
  }

  &[readonly]:not(:disabled) {
    border-color: forms.$input-color;
    background-color: forms.$input-bg;
  }

  &[type='file'] {
    position: relative;

    &:disabled {
      @include utilities.high-contrast-mode {
        color: GrayText; // Needed for the button on blink browser, even if we define it on .form-control:disabled
        border-color: GrayText;
      }
    }

    &::file-selector-button {
      display: block;
      position: absolute;
      top: 0;
      bottom: 0;
      right: 0;
      margin-inline: 0;
      height: auto;
      background-color: inherit;
      border-right: 0 none;
      border-left: inherit;
    }

    // Fix Safari cutoff when change the initial position of the selector button.
    /* stylelint-disable-next-line */
    @supports (background: -webkit-named-image(i)) {
      &::file-selector-button {
        display: initial;
        position: initial;
        margin-inline: 0;
        padding-inline: 0;
        width: 0;
        border: 0 none;
      }

      &::after {
        display: flex;
        align-items: center;
        content: 'Choose File';
        position: absolute;
        top: 0;
        bottom: 0;
        right: 0;
        z-index: 2;
        padding-inline: forms.$input-padding-y;
        background-color: inherit;
        border-left: inherit;
        text-align: center;

        [lang='de'] & {
          content: 'Datei auswählen';
        }

        [lang='fr'] & {
          content: 'Choisir un fichier';
        }

        [lang='it'] & {
          content: 'Scegli file';
        }
      }

      &[multiple] {
        &::after {
          content: 'Choose Files';

          [lang='de'] & {
            content: 'Dateien auswählen';
          }

          [lang='fr'] & {
            content: 'Choisir des fichiers';
          }
        }
      }
    }
  }
}

.form-label {
  &:has(+ .form-control[disabled], + .form-select[disabled]) {
    color: var(--post-gray-60);
  }
}
