@use './../mixins/size' as size-mx;
@use './../mixins/icons' as icons-mx;
@use './../mixins/utilities';

@use './../variables/color';
@use './../variables/commons';
@use './../variables/spacing';
@use './../variables/components/stepper';

@use './../themes/bootstrap/core' as *;

.stepper {
  // start a counter for the step numbers
  counter-reset: step-index;

  @include utilities.reset-list;
  display: grid;

  // the first column is half a step wide to make sure the separators are the same size even on small screens
  grid-template-columns: stepper.$stepper-indicator-height / 2;

  // all other columns are 1 fraction of the available space ase we don't know the number of steps
  grid-auto-columns: minmax(0, 1fr);

  // we use a padding and negative margin on the last step for the same reason we need the first column
  padding-inline-end: stepper.$stepper-indicator-height / 2;
}

.stepper-item {
  grid-row: 1;
  position: relative;

  &:not(:last-child) {
    grid-column: span 2;
  }
}

.stepper-link {
  text-decoration: none;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  overflow: hidden;
  color: stepper.$stepper-link-color;
  width: fit-content;
  line-height: stepper.$stepper-link-line-height;

  // not adding ellipsis if the like doesn't have a title for accessibility reasons
  &:not([title]) {
    -webkit-line-clamp: none;
  }

  .stepper-item:not(:first-child, :last-child) > & {
    margin-inline: auto;
    text-align: center;
  }

  .stepper-item:last-child > & {
    margin-inline-start: auto;
    margin-inline-end: -1 * stepper.$stepper-indicator-height / 2; // negative margin matching the container padding
    text-align: end;
  }

  .stepper-item[aria-current='step'] > & {
    color: stepper.$stepper-link-current-color;
    font-weight: stepper.$stepper-link-current-font-weight;
  }

  // stepper indicator
  &::before {
    counter-increment: step-index;
    content: counter(step-index);
    display: flex;
    align-items: center;
    justify-content: center;
    height: stepper.$stepper-indicator-height;
    width: stepper.$stepper-indicator-height;
    box-sizing: border-box;
    margin-block-end: stepper.$stepper-link-gap;
    color: stepper.$stepper-indicator-color;
    background-color: stepper.$stepper-indicator-bg;
    border: stepper.$stepper-indicator-border-width solid stepper.$stepper-indicator-border-color;
    border-radius: 50%;
    font-weight: stepper.$stepper-indicator-font-weight;
    text-indent: initial;

    .stepper-item:not(:first-child, :last-child) > & {
      margin-inline: auto;
    }

    .stepper-item:last-child > & {
      margin-inline-start: auto;
    }

    // completed steps with check mark
    .stepper-item:not(
        .stepper-item[aria-current='step'],
        .stepper-item[aria-current='step'] ~ .stepper-item
      )
      > & {
      background-image: stepper.$stepper-indicator-check-icon;
      background-size: stepper.$stepper-indicator-check-icon-size;
      background-position: center;
      color: transparent;
    }

    // future steps with grey background
    .stepper-item[aria-current='step'] ~ .stepper-item > & {
      color: stepper.$stepper-indicator-future-color;
      background-color: stepper.$stepper-indicator-future-bg;
    }
  }

  // progress bar
  &::after {
    content: '';
    display: block;
    position: absolute;
    inset-block-start: (stepper.$stepper-indicator-height - stepper.$stepper-bar-height) / 2;
    inset-inline-start: 0;
    height: stepper.$stepper-bar-height;
    width: 100%;
    z-index: -1;

    // completed steps with filled bar
    .stepper-item:not(
        .stepper-item[aria-current='step'],
        .stepper-item[aria-current='step'] ~ .stepper-item
      )
      > & {
      background-color: stepper.$stepper-bar-fill-color;
    }

    // current step with half-filled bar
    .stepper-item[aria-current='step'] > & {
      background: linear-gradient(
        90deg,
        stepper.$stepper-bar-fill-color 50%,
        stepper.$stepper-bar-color 50%
      );
    }

    // future steps with unfilled bar
    .stepper-item:is(.stepper-item[aria-current='step'] ~ .stepper-item) > & {
      background-color: stepper.$stepper-bar-color;
    }
  }

  // focus/hover states
  &:is(a[href]) {
    @include utilities.focus-style {
      border-radius: commons.$border-radius;
    }

    @include utilities.focus-hover-style-custom('::before') {
      &,
      .stepper-item[aria-current='step'] ~ .stepper-item > & {
        color: #fff;
        background-color: #000;
      }

      .stepper-item:not(
          .stepper-item[aria-current='step'],
          .stepper-item[aria-current='step'] ~ .stepper-item
        )
        > & {
        background-image: stepper.$stepper-indicator-hover-check-icon;
      }
    }
  }
}

@include media-breakpoint-down(rg) {
  .stepper-item {
    .stepper-link {
      white-space: nowrap;
      width: 100%;
    }

    &[aria-current='step'] {
      // using "display: contents" on the stepper-item and stepper-link so that label, indicator and progress bar can be directly placed in the grid
      display: contents;

      > .stepper-link {
        display: contents;

        &::before {
          grid-row: -1;
          transform: translateX(50%);
          margin-inline-end: 0 !important;
        }

        &::after {
          grid-row: -1;
          width: 201%;
          transform: translateX(-50%);
          margin-block-start: (stepper.$stepper-indicator-height - stepper.$stepper-bar-height) / 2;
          margin-block-end: -1 * (stepper.$stepper-indicator-height - stepper.$stepper-bar-height) /
            2;
          position: static;
        }
      }
    }

    &:not(&[aria-current='step']) {
      grid-row: -1;
      justify-self: stretch;

      // hide completed and future step labels
      > .stepper-link {
        -webkit-line-clamp: none;
        line-height: 0;
        text-indent: 100%;
      }
    }
  }
}

// for backward compatibility
.stepper-container {
  @include size-mx.responsive-size('big', 'margin-bottom');

  > .stepper-bar {
    display: none;
  }
}
