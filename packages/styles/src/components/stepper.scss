@use '../mixins/size' as size-mx;
@use '../mixins/utilities';

@use '../variables/spacing';
@use '../variables/components/stepper';

@use '../themes/bootstrap/overrides' as *;

.stepper-container {
  @include size-mx.responsive-size('big', 'margin-bottom');
  position: relative;
}

.stepper-bar {
  height: stepper.$stepper-bar-height;
  margin-top: stepper.$stepper-indicator-height * 0.5;
  margin-bottom: -1 * (stepper.$stepper-bar-height + stepper.$stepper-indicator-height) * 0.5;
}

.stepper {
  counter-reset: step-index;

  list-style: none;
  padding: 0 (0.5 * stepper.$stepper-indicator-height);
  margin: 0;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(#{0.5 * stepper.$stepper-indicator-height}, 1fr));
  justify-items: center;
}

.stepper-item {
  counter-increment: step-index;
  display: flex;
  flex-direction: column;

  &:first-child {
    justify-self: start;
    align-items: start;
    transform: translateX(#{-0.5 * stepper.$stepper-indicator-height});
  }

  &:last-child {
    justify-self: end;
    align-items: end;
    transform: translateX(#{0.5 * stepper.$stepper-indicator-height});
  }

  &:not(:first-child):not(:last-child) {
    grid-column-end: span 2;
    align-items: center;
  }

  &[aria-current] {
    pointer-events: none;
  }

  // Stepper indicator styles
  &::before {
    content: '';
    pointer-events: none;
    text-align: center;
    height: stepper.$stepper-indicator-height;
    width: stepper.$stepper-indicator-height;
    line-height: stepper.$stepper-indicator-height - 2 * stepper.$stepper-indicator-border-width;
    margin-bottom: -1 * stepper.$stepper-indicator-height;
    color: stepper.$stepper-indicator-color;
    background-color: stepper.$stepper-indicator-bg;
    background-image: stepper.$stepper-indicator-check-icon;
    background-size: spacing.$size-large;
    background-position: center;
    background-repeat: no-repeat;
    border: stepper.$stepper-indicator-border-width solid stepper.$stepper-indicator-border-color;
    border-radius: 50%;
    font-size: stepper.$stepper-indicator-font-size;
    font-weight: stepper.$stepper-indicator-font-weight;
    transition: background 250ms, color 250ms;
  }

  &[aria-current]::before,
  &[aria-current] ~ &::before {
    background-image: none;
    content: counter(step-index);
  }

  &[aria-current] ~ &:not(:hover)::before {
    color: stepper.$stepper-indicator-future-color;
    background-color: stepper.$stepper-indicator-future-bg;
  }

  &:hover::before {
    color: stepper.$stepper-indicator-hover-color;
    background-color: stepper.$stepper-indicator-hover-bg;
    background-image: stepper.$stepper-indicator-hover-check-icon;
  }

  &:is(:focus-visible, :focus-within)::before {
    outline: stepper.$stepper-indicator-hover-outline;
  }
}

.stepper-link {
  padding-top: stepper.$stepper-indicator-height + stepper.$stepper-link-gap;
  text-decoration: none;
  color: stepper.$stepper-link-color;
  transition: color 250ms;

  .stepper-item[aria-current] > & {
    color: stepper.$stepper-link-current-color;
    font-size: stepper.$stepper-link-current-font-size;
    font-weight: stepper.$stepper-link-current-font-weight;
  }

  &:hover {
    color: stepper.$stepper-link-hover-color;
  }

  &:focus-visible {
    outline: none;
  }
}

@include media-breakpoint-down(rg) {
  .stepper-item {
    &[aria-current] .stepper-link {
      position: absolute;
      bottom: 0;
      left: 0;
    }

    &:not([aria-current]) .stepper-link {
      overflow: hidden;
      white-space: nowrap;
      text-indent: 100%;
      width: stepper.$stepper-indicator-height;
    }
  }
}

@include utilities.high-contrast-mode() {
  .stepper-bar {
    background-color: CanvasText;
    border: 0 none;

    .progress-bar {
      background-color: Highlight;
    }
  }

  .stepper-item {
    &::before {
      width: calc(#{stepper.$stepper-indicator-height} + 2 * #{spacing.$size-line});
      height: calc(#{stepper.$stepper-indicator-height} + 2 * #{spacing.$size-line});
      line-height: calc(#{stepper.$stepper-indicator-height} + 2 * #{spacing.$size-line});
      color: ButtonText;
      background-color: ButtonFace;
      background-image: stepper.$stepper-indicator-hover-check-icon;
      border: 0;
      outline: spacing.$size-line solid VisitedText;
      outline-offset: -3 * spacing.$size-line;
      margin-top: -1 * spacing.$size-line;
    }

    &[aria-current] ~ &::before {
      outline-color: ButtonBorder;
    }

    &[aria-current]::before {
      outline-color: Highlight;
    }

    &:is(:focus-visible, :focus-within)::before {
      border: spacing.$size-line solid Highlight;
      line-height: stepper.$stepper-indicator-height;
      outline-color: VisitedText;
    }

    &[aria-current] ~ &:is(:focus-visible, :focus-within)::before {
      outline-color: ButtonBorder;
    }
  }

  .stepper-link {
    color: VisitedText;

    .stepper-item[aria-current] ~ .stepper-item > & {
      color: CanvasText;
    }

    .stepper-item[aria-current] > & {
      color: Highlight;
    }
  }
}
