@forward './../variables/options';

@use 'sass:map';
@use 'sass:color' as sass-color;
@use 'sass:list';
@use './../lic/bootstrap-license';
@use './../themes/bootstrap/core' as *;
@use './../themes/bootstrap/utilities' as bu; // TODO: Move Design System utilities to utilities folder.
@use './../mixins/utilities';
@use './../variables/color';
@use './../variables/spacing';
@use './../variables/grid';
@use './../functions/color' as color-fn;
@use './../functions/contrast' as contrast-fn;
@use './../placeholders/color' as color-ph;

.bold {
  font-weight: 700;
}

.light {
  font-weight: 300;
}

.regular {
  font-weight: 400;
}

.h-visuallyhidden {
  @include utilities.visuallyhidden;
}

.h-visuallyhidden-up-md {
  @include media-breakpoint-up(md) {
    @include utilities.visuallyhidden;
  }
}

.h-visuallyhidden-down-rg {
  @include media-breakpoint-down(rg) {
    @include utilities.visuallyhidden;
  }
}

.h-visuallyhidden-down-lg {
  @include media-breakpoint-down(lg) {
    @include utilities.visuallyhidden;
  }
}

.h-clearfix {
  @include clearfix;
}

//-- Legacy --
span.spacer {
  display: block;
  width: spacing.$spacer;
  height: spacing.$spacer;
}

.no-toggle-arrow::after {
  display: none !important;
}

// Background Utility
@each $name, $color in color.$background-colors {
  .bg-#{$name} {
    --post-bg-rgb: #{color-fn.rgb-values($color)};

    @extend %color-background-rgba;

    @if (contrast-fn.light-or-dark($color) == 'dark') {
      @extend %color-background-dark-variables;
    } @else {
      @extend %color-background-light-variables;
    }
  }
}

// TODO: refactor to link default styles
.text-auto {
  a {
    color: inherit;

    &:focus,
    &:hover {
      opacity: 0.8;
    }
  }
}

a {
  color: var(--post-contrast-color);

  &:focus,
  &:hover {
    color: rgba(var(--post-contrast-color-rgb), 0.8);
  }

  @include utilities.high-contrast-mode() {
    &,
    &:visited,
    &:focus,
    &:hover {
      color: LinkText !important;
    }
  }
}
