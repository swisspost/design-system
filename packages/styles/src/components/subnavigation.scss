@forward '../variables/options';

@use '../lic/bootstrap-license';
@use '../themes/bootstrap/overrides' as *;

@use '../mixins';
@use '../mixins/utilities';
@use '../functions/utilities' as utility-functions;
@use '../variables/components/subnavigation';
@use '../variables/animation';
@use '../variables/spacing';
@use '../placeholders/text';

$module-name: 'subnavigation';

.#{$module-name} {
  position: relative;
  background-color: subnavigation.$subnavigation-background-color;

  &::after {
    @include mixins.full-width-underscore(
      subnavigation.$subnavigation-border-bottom-color,
      subnavigation.$subnavigation-border-bottom-width
    );
    z-index: utility-functions.z-index(subnavigation, underscore-root);
  }

  &-alternate {
    background-color: subnavigation.$subnavigation-background-color-alternate;
  }

  &-list {
    display: flex;
    width: calc(100% + 2rem);
    margin: 0 (-($spacer));
    padding: 0 $spacer;
    overflow-x: auto;
    list-style: none;
  }

  &-item {
    min-height: subnavigation.$subnavigation-height-xs;

    @include media-breakpoint-up(lg) {
      min-height: subnavigation.$subnavigation-height-lg;
    }
    @include media-breakpoint-up(xl) {
      min-height: subnavigation.$subnavigation-height-xl;
    }

    .badge {
      margin-left: subnavigation.$subnavigation-result-margin-left;
      color: inherit;
    }
  }

  &-link {
    @extend %font-curve-small;

    @include transition(
      color animation.$transition-time-default animation.$transition-easing-default
    );
    display: flex;
    position: relative;
    align-items: center;
    justify-content: space-between;
    width: 100%;
    height: 100%;
    padding: subnavigation.$subnavigation-link-padding-xs;
    color: subnavigation.$subnavigation-link-color;
    text-decoration: none;
    white-space: nowrap;

    @include media-breakpoint-up(lg) {
      padding: subnavigation.$subnavigation-link-padding-lg;
    }

    @include utilities.high-contrast-mode() {
      &:focus,
      &:focus-within,
      &:focus-visible {
        outline-offset: -(spacing.$size-mini);
      }
    }

    &:hover,
    &:focus {
      color: subnavigation.$subnavigation-link-color-hover;
      text-decoration: none;

      &:not(.active)::after {
        right: 0;
        left: 0;
        opacity: 1;
      }
    }

    &:not(.active)::after {
      @include mixins.full-width-underscore(
        #{subnavigation.$subnavigation-link-underscore-color-hover},
        #{subnavigation.$subnavigation-link-underscore-height}
      );
      @include transition(
        opacity animation.$transition-time-default animation.$transition-easing-default,
        left animation.$transition-time-default animation.$transition-easing-decelerate,
        right animation.$transition-time-default animation.$transition-easing-decelerate
      );
      z-index: utility-functions.z-index(subnavigation, underscore-link);
      right: animation.$transition-distance-medium;
      left: animation.$transition-distance-medium;
      opacity: 0;

      @include media-breakpoint-up(lg) {
        right: animation.$transition-distance-medium-md;
        left: animation.$transition-distance-medium-md;
      }
    }

    &.active {
      color: subnavigation.$subnavigation-link-color-hover;
      font-weight: $font-weight-bold;

      @include utilities.high-contrast-mode() {
        // use important so other background colors don't overwrite this color
        color: highlight !important;
        text-decoration: underline;
      }

      &::after {
        @include mixins.full-width-underscore(
          #{subnavigation.$subnavigation-link-underscore-color-active},
          #{subnavigation.$subnavigation-link-underscore-height}
        );
        z-index: utility-functions.z-index(subnavigation, underscore-link);
      }
    }
  }
}
