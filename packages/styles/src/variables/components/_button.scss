@use 'sass:map';

@use './../color';
@use './../type';
@use './../commons';
@use './../spacing';
@use './../animation';

@use './../../functions/sizing';

@use '../../functions/tokens';
@use '../../tokens/components';

tokens.$default-map: components.$post-button;

// Buttons + Forms
//
// Shared variables that are reassigned to `$input-` and `$btn-` specific variables.
$input-btn-border-width: commons.$border-thick !default;
$input-btn-border-width-rem: sizing.px-to-rem($input-btn-border-width);

$input-btn-padding-y: spacing.$size-regular - $input-btn-border-width-rem !default;
$input-btn-padding-x: spacing.$size-small-large - $input-btn-border-width-rem !default;
$input-btn-line-height: type.$line-height-copy !default;

$input-btn-padding-y-sm: spacing.$size-micro !default;
$input-btn-padding-x-sm: spacing.$size-regular !default;
$input-btn-line-height-sm: type.$line-height-copy !default;

$input-btn-padding-y-rg: spacing.$size-small-regular - $input-btn-border-width-rem !default;
$input-btn-padding-x-rg: spacing.$size-regular - $input-btn-border-width-rem !default;
$input-btn-line-height-rg: type.$line-height-copy !default;

$input-btn-padding-y-lg: spacing.$size-small-regular !default;
$input-btn-padding-x-lg: spacing.$size-regular !default;
$input-btn-line-height-lg: type.$line-height-copy !default;

$input-btn-focus-width: 0.125rem !default; // 2px
$input-btn-focus-color: rgba(color.$gray-80, 0.25) !default;
$input-btn-focus-box-shadow: 0 0 0 $input-btn-focus-width $input-btn-focus-color !default;

// Buttons
$btn-animation-distance-factor: 0.5 !default;

// sm
$btn-padding-x-sm: sizing.px-to-rem(12) !default;
$btn-animation-distance-sm: spacing.$size-mini !default;
// Design System only
$btn-height-sm: 2rem;
$btn-font-size-sm: type.$font-size-12 !default;
$btn-icon-size-sm: spacing.$size-regular !default;

// rg
$btn-padding-x-rg: sizing.px-to-rem(14) !default;
$btn-animation-distance-rg: spacing.$size-mini !default;
// Design System only
$btn-height-rg: 2.5rem;
$btn-font-size-rg: type.$font-size-14 !default;
$btn-icon-size-rg: 1.125rem !default;

// md
$btn-padding-x-md: sizing.px-to-rem(16) !default;
$btn-animation-distance-md: spacing.$size-mini !default;
// Design System only
$btn-height-md: 3rem;
$btn-font-size-md: type.$font-size-16 !default;
$btn-icon-size-md: spacing.$size-small-large !default;

// lg
$btn-padding-x-lg: sizing.px-to-rem(18) !default;
$btn-animation-distance-lg: spacing.$size-mini !default;
// Design System only
$btn-height-lg: 3.5rem;
$btn-font-size-lg: type.$font-size-18 !default;
$btn-icon-size-lg: 1.375rem !default;

// Available button sizes except the default, which is md
$btn-non-default-sizes: sm, rg, lg !default;

$btn-animation-distance-map: (
  'sm': $btn-animation-distance-sm,
  'rg': $btn-animation-distance-rg,
  'md': $btn-animation-distance-md,
  'lg': $btn-animation-distance-lg,
);
$btn-padding-x-map: (
  'sm': tokens.get('post-button', 'small-padding-inline'),
  'rg': tokens.get('post-button', 'medium-padding-inline'),
  'md': tokens.get('post-button', 'medium-padding-inline'),
  'lg': tokens.get('post-button', 'large-padding-inline'),
);
$btn-height-map: (
  'sm': $btn-height-sm,
  'rg': $btn-height-rg,
  'md': $btn-height-md,
  'lg': $btn-height-lg,
);
$btn-font-size-map: (
  'sm': $btn-font-size-sm,
  'rg': $btn-font-size-rg,
  'md': $btn-font-size-md,
  'lg': $btn-font-size-lg,
);
$btn-icon-size-map: (
  'sm': $btn-icon-size-sm,
  'rg': $btn-icon-size-rg,
  'md': $btn-icon-size-md,
  'lg': $btn-icon-size-lg,
);

$btn-border-width: $input-btn-border-width !default;

$btn-font-weight: type.$font-weight-normal !default;
$btn-box-shadow: none !default;
$btn-focus-width: $input-btn-focus-width !default;
$btn-focus-box-shadow: $input-btn-focus-box-shadow !default;
$btn-disabled-opacity: 0.4 !default;
$btn-disabled-background: rgba(color.$black, 0.4) !default;
$btn-active-box-shadow: none !default;

$btn-link-disabled-color: color.$gray-20 !default;

$btn-block-spacing-y: 0.5rem !default;

// Allows for customizing button radius independently from global border radius
$btn-border-radius: commons.$border-radius !default;

$btn-transition-duration: animation.$transition-time-default;
$btn-transition: (
  opacity $btn-transition-duration,
  border-color $btn-transition-duration,
  background-color $btn-transition-duration,
  color $btn-transition-duration
) !default;

$btn-variants: primary, default, secondary, tertiary, link !default;

// For sizes
$new-btn-padding-x-map: (
  'sm': tokens.get('post-button', 'small-padding-inline'),
  'rg': tokens.get('post-button', 'medium-padding-inline'),
  'md': tokens.get('post-button', 'medium-padding-inline'),
  'lg': tokens.get('post-button', 'large-padding-inline'),
);
$new-btn-gap-x-map: (
  'sm': tokens.get('post-button', 'small-gap-inline'),
  'rg': tokens.get('post-button', 'medium-gap-inline'),
  'md': tokens.get('post-button', 'medium-gap-inline'),
  'lg': tokens.get('post-button', 'large-gap-inline'),
);
$new-btn-height-map: (
  'sm': tokens.get('post-button', 'small-height'),
  'rg': tokens.get('post-button', 'medium-height'),
  'md': tokens.get('post-button', 'medium-height'),
  'lg': tokens.get('post-button', 'large-height'),
);
$new-btn-icon-size-map: (
  'sm': tokens.get('post-button', 'small-icon'),
  'rg': tokens.get('post-button', 'medium-icon'),
  'md': tokens.get('post-button', 'medium-icon'),
  'lg': tokens.get('post-button', 'large-icon'),
);

// For variants
$new-btn-enabled-stroke: (
  'primary': tokens.get('post-button', 'primary-enabled-stroke'),
  'default': tokens.get('post-button', 'secondary-enabled-stroke'),
  'secondary': tokens.get('post-button', 'secondary-enabled-stroke'),
  'tertiary': tokens.get('post-button', 'tertiary-enabled-stroke'),
  'link': tokens.get('post-button', 'tertiary-enabled-stroke'),
);
$new-btn-enabled-bg: (
  'primary': tokens.get('post-button', 'primary-enabled-bg'),
  'default': tokens.get('post-button', 'secondary-enabled-bg'),
  'secondary': tokens.get('post-button', 'secondary-enabled-bg'),
  'tertiary': tokens.get('post-button', 'tertiary-enabled-bg'),
  'link': tokens.get('post-button', 'tertiary-enabled-bg'),
);
$new-btn-enabled-fg: (
  'primary': tokens.get('post-button', 'primary-enabled-fg'),
  'default': tokens.get('post-button', 'secondary-enabled-fg'),
  'secondary': tokens.get('post-button', 'secondary-enabled-fg'),
  'tertiary': tokens.get('post-button', 'tertiary-enabled-fg'),
  'link': tokens.get('post-button', 'tertiary-enabled-fg'),
);
$new-btn-disabled-stroke: (
  'primary': tokens.get('post-button', 'primary-disabled-stroke'),
  'default': tokens.get('post-button', 'secondary-disabled-stroke'),
  'secondary': tokens.get('post-button', 'secondary-disabled-stroke'),
  'tertiary': tokens.get('post-button', 'tertiary-disabled-stroke'),
  'link': tokens.get('post-button', 'tertiary-disabled-stroke'),
);
$new-btn-disabled-bg: (
  'primary': tokens.get('post-button', 'primary-disabled-bg'),
  'default': tokens.get('post-button', 'secondary-disabled-bg'),
  'secondary': tokens.get('post-button', 'secondary-disabled-bg'),
  'tertiary': tokens.get('post-button', 'tertiary-disabled-bg'),
  'link': tokens.get('post-button', 'tertiary-disabled-bg'),
);
$new-btn-disabled-fg: (
  'primary': tokens.get('post-button', 'primary-disabled-fg'),
  'default': tokens.get('post-button', 'secondary-disabled-fg'),
  'secondary': tokens.get('post-button', 'secondary-disabled-fg'),
  'tertiary': tokens.get('post-button', 'tertiary-disabled-fg'),
  'link': tokens.get('post-button', 'tertiary-disabled-fg'),
);
$new-btn-hover-stroke: (
  'primary': tokens.get('post-button', 'primary-hover-stroke'),
  'default': tokens.get('post-button', 'secondary-hover-stroke'),
  'secondary': tokens.get('post-button', 'secondary-hover-stroke'),
  'tertiary': tokens.get('post-button', 'tertiary-hover-stroke'),
  'link': tokens.get('post-button', 'tertiary-hover-stroke'),
);
$new-btn-hover-bg: (
  'primary': tokens.get('post-button', 'primary-hover-bg'),
  'default': tokens.get('post-button', 'secondary-hover-bg'),
  'secondary': tokens.get('post-button', 'secondary-hover-bg'),
  'tertiary': tokens.get('post-button', 'tertiary-hover-bg'),
  'link': tokens.get('post-button', 'tertiary-hover-bg'),
);
$new-btn-hover-fg: (
  'primary': tokens.get('post-button', 'primary-hover-fg'),
  'default': tokens.get('post-button', 'secondary-hover-fg'),
  'secondary': tokens.get('post-button', 'secondary-hover-fg'),
  'tertiary': tokens.get('post-button', 'tertiary-hover-fg'),
  'link': tokens.get('post-button', 'tertiary-hover-fg'),
);

$new-btn-inverted-enabled-stroke: (
  'primary': tokens.get('post-button', 'primary-inverted-enabled-stroke'),
  'default': tokens.get('post-button', 'secondary-inverted-enabled-stroke'),
  'secondary': tokens.get('post-button', 'secondary-inverted-enabled-stroke'),
  'tertiary': tokens.get('post-button', 'tertiary-inverted-enabled-stroke'),
  'link': tokens.get('post-button', 'tertiary-inverted-enabled-stroke'),
);
$new-btn-inverted-enabled-bg: (
  'primary': tokens.get('post-button', 'primary-inverted-enabled-bg'),
  'default': tokens.get('post-button', 'secondary-inverted-enabled-bg'),
  'secondary': tokens.get('post-button', 'secondary-inverted-enabled-bg'),
  'tertiary': tokens.get('post-button', 'tertiary-inverted-enabled-bg'),
  'link': tokens.get('post-button', 'tertiary-inverted-enabled-bg'),
);
$new-btn-inverted-enabled-fg: (
  'primary': tokens.get('post-button', 'primary-inverted-enabled-fg'),
  'default': tokens.get('post-button', 'secondary-inverted-enabled-fg'),
  'secondary': tokens.get('post-button', 'secondary-inverted-enabled-fg'),
  'tertiary': tokens.get('post-button', 'tertiary-inverted-enabled-fg'),
  'link': tokens.get('post-button', 'tertiary-inverted-enabled-fg'),
);
$new-btn-inverted-disabled-stroke: (
  'primary': tokens.get('post-button', 'primary-inverted-disabled-stroke'),
  'default': tokens.get('post-button', 'secondary-inverted-disabled-stroke'),
  'secondary': tokens.get('post-button', 'secondary-inverted-disabled-stroke'),
  'tertiary': tokens.get('post-button', 'tertiary-inverted-disabled-stroke'),
  'link': tokens.get('post-button', 'tertiary-inverted-disabled-stroke'),
);
$new-btn-inverted-disabled-bg: (
  'primary': tokens.get('post-button', 'primary-inverted-disabled-bg'),
  'default': tokens.get('post-button', 'secondary-inverted-disabled-bg'),
  'secondary': tokens.get('post-button', 'secondary-inverted-disabled-bg'),
  'tertiary': tokens.get('post-button', 'tertiary-inverted-disabled-bg'),
  'link': tokens.get('post-button', 'tertiary-inverted-disabled-bg'),
);
$new-btn-inverted-disabled-fg: (
  'primary': tokens.get('post-button', 'primary-inverted-disabled-fg'),
  'default': tokens.get('post-button', 'secondary-inverted-disabled-fg'),
  'secondary': tokens.get('post-button', 'secondary-inverted-disabled-fg'),
  'tertiary': tokens.get('post-button', 'tertiary-inverted-disabled-fg'),
  'link': tokens.get('post-button', 'tertiary-inverted-disabled-fg'),
);
$new-btn-inverted-hover-stroke: (
  'primary': tokens.get('post-button', 'primary-inverted-hover-stroke'),
  'default': tokens.get('post-button', 'secondary-inverted-hover-stroke'),
  'secondary': tokens.get('post-button', 'secondary-inverted-hover-stroke'),
  'tertiary': tokens.get('post-button', 'tertiary-inverted-hover-stroke'),
  'link': tokens.get('post-button', 'tertiary-inverted-hover-stroke'),
);
$new-btn-inverted-hover-bg: (
  'primary': tokens.get('post-button', 'primary-inverted-hover-bg'),
  'default': tokens.get('post-button', 'secondary-inverted-hover-bg'),
  'secondary': tokens.get('post-button', 'secondary-inverted-hover-bg'),
  'tertiary': tokens.get('post-button', 'tertiary-inverted-hover-bg'),
  'link': tokens.get('post-button', 'tertiary-inverted-hover-bg'),
);
$new-btn-inverted-hover-fg: (
  'primary': tokens.get('post-button', 'primary-inverted-hover-fg'),
  'default': tokens.get('post-button', 'secondary-inverted-hover-fg'),
  'secondary': tokens.get('post-button', 'secondary-inverted-hover-fg'),
  'tertiary': tokens.get('post-button', 'tertiary-inverted-hover-fg'),
  'link': tokens.get('post-button', 'tertiary-inverted-hover-fg'),
);

//box-shadow: tokens.get('post-button', 'elevation');

//.pi {
//  filter: invert(1);
//  forced-color-adjust: none;
//}

//@include color-mx.on-dark-background {
// .pi {
//  filter: invert(0);
// }
//}
