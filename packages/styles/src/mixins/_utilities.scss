@use '../variables/spacing';
@use '../variables/commons';

@mixin reset-list() {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin visuallyhidden() {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0 0 0 0);
  border: 0;
}

@mixin visuallyhidden-reset() {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto;
}

@mixin visuallyhidden-focusable() {
  @include visuallyhidden;

  &:focus,
  &:active {
    @include visuallyhidden-reset;
  }
}

@mixin replace-text() {
  display: block;
  overflow: hidden;
  text-indent: 100%;
  white-space: nowrap;
}

// will truncate text needs a fixed width
// http://css-tricks.com/snippets/css/truncate-string-with-ellipsis/
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin full-width-underscore($color, $height) {
  content: '';
  display: block;
  position: absolute;
  right: 0;
  bottom: 0;
  left: 0;
  height: $height;
  background-color: $color;
  pointer-events: none;
}

@mixin generate-utility-class($classname, $size, $property, $value) {
  .#{$classname}-#{$size}-r {
    #{$property}: $value !important;
  }
}

@mixin high-contrast-mode() {
  @media (forced-colors: active), (-ms-high-contrast: active), (-ms-high-contrast: white-on-black) {
    @content;
  }
}

@mixin not-disabled-focus-hover {
  &:focus,
  &:not(:disabled):hover,
  &.pretend-hover {
    @content;
  }
}

@mixin focus-style-none {
  outline: none;
}

@mixin focus-style($border-radius: commons.$border-radius, $vendor-prefix: '') {
  &:is(:focus-visible, :focus-within, .pretend-focus)#{$vendor-prefix} {
    outline-offset: spacing.$size-line;
    outline: spacing.$size-line solid var(--post-focus-color);
    border-radius: $border-radius;

    @include high-contrast-mode() {
      outline-color: Highlight;
    }

    // In case rules need to be slightly adjusted
    @content;
  }
}

@mixin focus-style-custom($vendor-prefix: '') {
  &:is(:focus-visible, :focus-within, .pretend-focus)#{$vendor-prefix} {
    @content;
  }
}
