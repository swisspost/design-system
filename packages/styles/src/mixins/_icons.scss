@use 'sass:map';
@use 'sass:meta';

@use './../variables/type';
@use './../variables/color';
@use './../variables/components/button';
@use './../functions/icons' as icon-fn;
@use './../mixins/utilities';
@use './../utilities/env-variables' as icon-version;
@use './../ui-icon-map' as ui-icons;
@use './../svg-icon-map' as post-icons;

@mixin icon($name) {
  $icon: icon-fn.get-svg-url($name);
  mask-image: url('#{$icon}');
  background-color: currentColor;
  color: currentColor; // Required in this case with usage of forced-color-adjust: preserve-parent-color
  forced-color-adjust: preserve-parent-color;
}

@mixin post-icon(
  $name,
  $color: inherit,
  $width: 1em,
  $height: 1em
) {
  display: inline-block;
  width: $width;
  height: $height;
  vertical-align: -0.15em;
  background-color: currentColor;
  color: $color;
  
  @if map.has-key(ui-icons.$ui-icon-map, $name) {
    $icon-url: ui-icons.get-ui-icon($name);
    /* stylelint-disable-next-line property-no-vendor-prefix */
    -webkit-mask-image: url('#{$icon-url}');
    mask-image: url('#{$icon-url}');
  }
  @else if map.has-key(post-icons.$svg-icon-map, $name) {
    $icon-url: map.get(post-icons.$svg-icon-map, $name);
    /* stylelint-disable-next-line property-no-vendor-prefix */
    -webkit-mask-image: url('#{$icon-url}');
    mask-image: url('#{$icon-url}');
  }
  
  /* stylelint-disable-next-line property-no-vendor-prefix */
  -webkit-mask-position: center center;
  mask-position: center center;
  /* stylelint-disable-next-line property-no-vendor-prefix */
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  /* stylelint-disable-next-line property-no-vendor-prefix */
  -webkit-mask-size: 100%;
  mask-size: 100%;
}

@mixin remove-icon() {
  mask-image: none;
}
