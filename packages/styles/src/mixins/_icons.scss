@use 'sass:map';
@use 'sass:meta';
@use 'sass:list';

@use './../variables/type';
@use './../variables/color';
@use './../variables/components/button';
@use './../functions/icons' as icon-fn;
@use './../mixins/utilities';


$loaded-icons: () !default;

/// Loads the icon CSS only once per icon name.
@mixin load-icon-css($name, $path: '@swisspost/design-system-icons/dist/css-variables') {
  @if list.index($loaded-icons, $name) == null {
    $loaded-icons: list.append($loaded-icons, $name) !global;
    @at-root {
      @include meta.load-css("#{$path}/#{$name}");
    }
  }
}


@mixin icon($name) {
  $icon: icon-fn.get-svg-url($name);
  mask-image: url('#{$icon}');
  background-color: currentColor;
  color: currentColor; // Required in this case with usage of forced-color-adjust: preserve-parent-color
  forced-color-adjust: preserve-parent-color;
}

@mixin post-icon(
  $name,
  $color: inherit,
  $width: 1em,
  $height: 1em,
  $path: '@swisspost/design-system-icons/dist/css-variables'
) {
  display: inline-block;
  vertical-align: -0.15em;
  background-color: currentColor;
  color: $color;
  mask-image: var(--post-icon-#{$name});
  -webkit-mask-image: var(--post-icon-#{$name});
  -webkit-mask-position: center center;
  mask-position: center center;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-size: 100%;
  mask-size: 100%;
  width: $width;
  height: $height;
  @include load-icon-css($name, $path);
}

@mixin remove-icon() {
  mask-image: none;
}
