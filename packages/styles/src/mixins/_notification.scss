@use 'sass:map';

@use './color' as color-mx;
@use './icons' as icons-mx;
@use './utilities' as utilities-mx;
@use './../functions/contrast' as contrast-fn;

@use './../variables/spacing';
@use './../variables/components/close';
@use './../variables/components/notification';

@mixin notification-size($size) {
  $icon-size: map.get(notification.$notification-icon-size-map, $size);
  $font-size: map.get(notification.$notification-font-size-map, $size);
  $padding-x: map.get(notification.$notification-padding-x-map, $size);
  $padding-y: map.get(notification.$notification-padding-y-map, $size);
  $hr-margin-block: map.get(notification.$notification-hr-margin-block-map, $size);

  position: relative;
  min-height: 2 * $padding-y + $icon-size;
  box-shadow: notification.$notification-box-shadow;
  border-radius: notification.$notification-border-radius;
  padding: $padding-y $padding-x;
  padding-inline-start: $padding-x + $icon-size + notification.$notification-gap;
  margin-block-end: notification.$notification-margin-bottom;
  font-size: $font-size;
  font-weight: notification.$notification-font-weight;

  &::before {
    content: '';
    display: block;
    position: absolute;
    height: $icon-size;
    width: $icon-size;
    left: $padding-x;
    top: $padding-y;
  }

  &.no-icon {
    min-height: 2 * $padding-y + close.$close-size;
    padding-inline-start: $padding-x;
  }

  // for notifications with .pi-* icons (deprecated)
  &[class^='pi-'],
  &[class*=' pi-'] {
    background-size: $icon-size;
    background-position: $padding-x $padding-y;
    background-repeat: no-repeat;

    &.no-icon {
      background-image: none;
    }
  }

  // for notifications with mask-image icons
  &.no-icon,
  &[class^='pi-'],
  &[class*=' pi-'] {
    &::before {
      content: unset;
    }
  }

  a {
    font-weight: notification.$notification-link-font-weight;
  }

  hr {
    margin-block: $hr-margin-block !important;
  }

  > *:only-child {
    @include notification-heading($size);
  }

  @include utilities-mx.high-contrast-mode {
    filter: none !important;
    background-color: transparent !important;
    border: 2px solid WindowText;
  }
}

@mixin notification-variant($color, $icon) {
  @include color-mx.colored-background($color);

  &:not(.no-icon, [class^='pi-'], [class*=' pi-'])::before {
    @include icons-mx.icon($icon);
  }
}

@mixin notification-dismissible($size, $close: 'btn-close') {
  $padding-x: map.get(notification.$notification-padding-x-map, $size);

  position: relative;
  padding-inline-end: $padding-x + notification.$notification-gap + close.$close-size;

  > .#{$close} {
    position: absolute;
    inset-block-start: spacing.$spacer;
    inset-inline-end: $padding-x;
  }

  > .#{$close}:first-child + *:last-child {
    @include notification-heading($size);
  }
}

@mixin notification-heading($size) {
  font-size: map.get(notification.$notification-heading-font-size-map, $size);
  font-weight: notification.$notification-heading-font-weight;
}
