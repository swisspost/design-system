@use '../functions/tokens';
@use '../tokens/elements';

@mixin list-bullet() {
  list-style: none;
  margin-block: tokens.get('list-bullet-margin-block', elements.$post-listbullet);
  padding-inline-start: calc(
    #{tokens.get('list-bullet-item-icon-size', elements.$post-listbullet)} + #{tokens.get(
        'list-bullet-item-icon-gap-inline',
        elements.$post-listbullet
      )}
  );

  > li {
    margin: 0;
    padding-inline: 0;
    padding-block: tokens.get('list-bullet-item-text-padding-block', elements.$post-listbullet);

    ~ li {
      margin-block-start: tokens.get('list-bullet-item-gap-block', elements.$post-listbullet);
    }

    &::before {
      display: block;
      content: '';
      box-sizing: content-box;
      position: absolute;
      margin-block-start: calc(
        (#{tokens.get('body-line-height', elements.$post-body)} * 0.5em) -
          (#{tokens.get('list-bullet-item-icon-bullet-size', elements.$post-listbullet)} * 0.5)
      );
      margin-inline-start: calc(
        (#{tokens.get('list-bullet-item-icon-size', elements.$post-listbullet)} * -0.5) +
          (#{tokens.get('list-bullet-item-icon-bullet-size', elements.$post-listbullet)} * -0.5) +
          (#{tokens.get('post-list-bullet-item-icon-gap-inline', elements.$post-listbullet)} * -1)
      );
      width: tokens.get('list-bullet-item-icon-bullet-size', elements.$post-listbullet);
      height: tokens.get('list-bullet-item-icon-bullet-size', elements.$post-listbullet);
      background-color: currentColor;
      border-radius: 50%;
    }
  }
}

@mixin list-number() {
  margin-block: tokens.get('list-number-item-gap-block', elements.$post-listnumber);
  padding-inline-end: tokens.get('list-number-item-gap-block', elements.$post-listnumber);
  padding-inline-start: calc(
    tokens.get('list-number-item-icon-size', elements.$post-listnumber) +
      tokens.get('list-number-item-icon-gap-inline', elements.$post-listnumber)
  );

  > li {
    margin-block-end: tokens.get('list-number-margin-block', elements.$post-listnumber);
    padding-inline-start: tokens.get('list-number-item-icon-gap-inline', elements.$post-listnumber);
    padding-block: tokens.get('list-number-item-text-padding-block', elements.$post-listnumber);

    &:last-child {
      margin-block-end: 0;
    }
  }
}

@mixin list-inline() {
  @include list-unstyled() {
    display: flex;
    flex-wrap: wrap;
    row-gap: tokens.get('list-bullet-item-gap-block', elements.$post-listbullet);
    column-gap: calc(
      tokens.get('post-list-bullet-item-icon-gap-inline', elements.$post-listbullet) * 2
    );
    margin-block: tokens.get('list-bullet-margin-block', elements.$post-listbullet);
  }
}

@mixin list-revert() {
  all: revert;
  @content;

  > li {
    all: revert;

    ~ li {
      all: revert;
    }

    &::before {
      all: revert;
    }
  }
}

@mixin list-unstyled() {
  all: unset;
  display: block;
  list-style: none;
  @content;

  > li {
    all: unset;
    display: list-item;

    ~ li {
      all: unset;
      display: list-item;
    }

    &::before {
      all: unset;
    }
  }
}
