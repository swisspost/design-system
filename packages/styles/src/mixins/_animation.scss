@use './../themes/bootstrap/core' as *;
@use './../functions/icons';

@mixin hover-animation(
  $animation-item-size,
  $animation-distance,
  $animation-container-height,
  $animation-item-offset: 0
) {
  &:hover,
  &:focus {
    &:not(:disabled):not(.disabled) > span {
      transform: translate(-$animation-distance);

      &::after {
        transform: translate($animation-distance);
      }
    }
  }

  > span {
    padding: 0 $animation-distance;
    transform: translate(0); // Needed as a fix for Firefox.

    &::after {
      top: $animation-item-offset;
      width: $animation-item-size;
      height: $animation-container-height;
      transform: translate(0); // Needed as a fix for Firefox.
    }
  }
}

// DEPRECATED
@mixin hover-animation-svg-icon($color, $icon-name, $stroke-width: null) {
  &:not(:disabled):not(.disabled) > span {
    &::after {
      @if ($stroke-width == null) {
        background-image: url('#{icons.get-colored-svg-url($icon-name, $color)}');
      } @else {
        $icon: icons.get-colored-svg-url($icon-name, $color);
        background-image: url('#{icons.add-stroke-color($icon, $color, $stroke-width)}');
      }
    }
  }
}

// Animations
// Progressively enhanced with currently experimental @starting-style which allows to animate stuff appearing in the top layer
// https://developer.mozilla.org/en-US/docs/Web/CSS/@starting-style
@mixin top-layer-pop-in($duration: 0.35s, $open-selector: '[open]') {
  transform: scale(0.8);
  opacity: 0;
  transition-property: transform, opacity, overlay, display;
  transition-behavior: allow-discrete;
  transition-duration: var(--post-transition-duration, 0.35s);

  transition-timing-function: linear(
    0,
    0.007,
    0.029 2.2%,
    0.118 4.7%,
    0.625 14.4%,
    0.826 19%,
    0.902,
    0.962,
    1.008 26.1%,
    1.041 28.7%,
    1.064 32.1%,
    1.07 36%,
    1.061 40.5%,
    1.015 53.4%,
    0.999 61.6%,
    0.995 71.2%,
    1
  );

  &#{$open-selector} {
    transform: scale(1);
    opacity: 1;

    @starting-style {
      opacity: 0;
      transform: scale(0.8);
    }
  }
}
