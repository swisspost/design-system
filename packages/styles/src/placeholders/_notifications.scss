@use './../themes/bootstrap/overrides' as *;

@use './../variables/commons';
@use './../variables/color';
@use './../variables/type';
@use './../variables/components/alert';

@use './../components/close';

@use './../mixins/utilities';
@use './../mixins/icons' as icon-mixin;
@use './../functions/color' as color-fn;
@use './../placeholders/color' as color-ph;
@use './text';

%notification-container {
  display: flex;
  z-index: commons.$zindex-alert;
  flex-direction: column;
}

%notification {
  @extend %list-adjustment;
  @include border-radius(alert.$alert-border-radius);

  display: flex;

  position: relative;
  flex-flow: column nowrap;
  align-items: stretch;
  justify-content: center;
  margin-bottom: alert.$alert-margin-bottom;

  // The !important Allows a new icon to be inserted via "pi"-class.
  border: alert.$alert-border-width solid transparent !important;

  background-repeat: no-repeat;
  font-weight: type.$font-weight-light;

  line-height: alert.$alert-line-height;

  hr {
    width: 100%;
    margin: alert.$alert-text-space-between * 2 0 alert.$alert-text-space-between * 3;
  }

  &.no-icon {
    background-image: none;
  }

  > *:not(hr) {
    margin-bottom: alert.$alert-text-space-between;
  }

  > p + p {
    margin-top: alert.$alert-text-space-between;
  }

  > *:last-child {
    margin-bottom: 0;
  }

  // When just the heading is shown (no message).
  > %notification-title:last-child {
    padding-bottom: 0;
  }

  // Adjust close link position
  %notification-close {
    position: absolute;
    z-index: 0;
    top: 0;
    right: 0;
    bottom: 0;
    box-sizing: unset;
    margin: 0;
    border: 0;
    outline-offset: -2px;
    font-size: 0;
  }
}

%notification-title {
  padding-bottom: alert.$alert-text-space-between;
  // Specified to prevent conflicts of changing $headings-color
  color: inherit;
  font-weight: type.$font-weight-bold;
}

/* stylelint-disable */
%notification-close-light {
  @extend .btn-close-white;
}

@each $name, $color, $icon in alert.$alert-list {
  $is-light-bg: color-fn.get-contrast-color($color) != #000;

  %notification-#{$name} {
    @if ($is-light-bg) {
      @include icon-mixin.pi($icon, 'white');

      hr {
        border-color: type.$hr-border-color-light;
      }
    } @else {
      @include icon-mixin.pi($icon);
    }

    @extend %color-background-rgb;

    @include utilities.high-contrast-mode() {
      // Specificity booster for the icon-mixin
      &[class] {
        @include icon-mixin.pi($icon, 'white');

        // use important here, so pi classes don't overwrite hcm styles
        filter: none !important;
      }
    }
  }

  %notification-#{$name}-close {
    @if ($is-light-bg) {
      @extend %notification-close-light;
    }
  }
}
/* stylelint-enable */
