@use 'sass:color';
@use 'sass:meta';
@use 'sass:math';
@use 'sass:string';

// Source: http://thesassway.com/intermediate/mixins-for-semi-transparent-colors
@function get-solid-color($color, $background: white) {
  @if (meta.type-of($color) != color or meta.type-of($background) != color) {
    @error "Please provide a color for this function. Supplied: '#{$color}' and '#{$background}'.";
  }
  $percent: color.alpha($color) * 100;
  $opaque: color.adjust($color, $alpha: 1);

  @return color.mix($opaque, $background, $percent);
}

@function rgb-values($color) {
  @if (meta.type-of($color) != color) {
    @error "Please provide a valid color for this function. Got '#{$color}'";
  }
  $red: color.red($color);
  $green: color.green($color);
  $blue: color.blue($color);

  @return $red, $green, $blue;
}

@function get-hex-string($color) {
  @if (meta.type-of($color) != color) {
    @error "Please provide a color for this function. Supplied: '#{$color}'.";
  }
  $hex: string.slice(color.ie-hex-str($color), 4);

  @return string.unquote('\##{string.to-lower-case($hex)}');
}
