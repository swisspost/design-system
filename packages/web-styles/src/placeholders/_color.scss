@use 'sass:list';

@use '../variables/color';
@use '../functions/color' as color-fn;

// background rgb properties
%color-background-rgb {
  background-color: rgb(var(--bg-rgb)) !important;
  color: var(--contrast-color) !important;
}

// background rgba properties
%color-background-rgba {
  --bg-opacity: 1;
  background-color: rgba(var(--bg-rgb), var(--bg-opacity)) !important;
  color: var(--contrast-color) !important;
}

// light background variables
%color-background-light-variables {
  --contrast-color: #{color.$black};
  --contrast-color-rgb: #{color-fn.rgb-values(color.$black)};
  --contrast-color-inverted: #{color.$white};
  --contrast-color-inverted-rgb: #{color-fn.rgb-values(color.$white)};

  @each $color-name, $color-value in color.$grays {
    --gray-#{$color-name}: #{$color-value};
  }
}

// dark background variables
%color-background-dark-variables {
  --contrast-color: #{color.$white};
  --contrast-color-rgb: #{color-fn.rgb-values(color.$white)};
  --contrast-color-inverted: #{color.$black};
  --contrast-color-inverted-rgb: #{color-fn.rgb-values(color.$black)};

  // Invert grays
  $l: list.length(color.$grays);
  @for $i from 1 through $l {
    $color-name: list.nth(list.nth(color.$grays, $l + 1 - $i), 1);
    $color-value: list.nth(list.nth(color.$grays, $i), 2);
    // stylelint-disable-next-line order/order
    --gray-#{$color-name}: #{$color-value};
  }
}
