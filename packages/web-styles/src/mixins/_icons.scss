@use 'sass:map';
@use 'sass:meta';

@use '../variables/type';
@use '../variables/color';
@use '../variables/components/button';
@use '../functions/icons' as icon-fn;
@use '../mixins/utilities';

@mixin pi($name, $color: color.$black) {
  $type: meta.type-of($color);
  $final-color: $color;

  @if ($type != color) {
    $final-color: map.get(color.$background-colors, $color);

    @if (not $final-color) {
      $valid-colors: map.keys(color.$background-colors);

      @error "Error in Mixin 'pi(name, color?)'. Color '#{$color}' is not available. Please choose one of the following: #{$valid-colors}.";
    }
  }
  border-color: $final-color;
  background-image: url(icon-fn.get-colored-svg-url($name, $final-color));

  // set icon to white on hcm
  @include utilities.high-contrast-mode() {
    @if ($final-color == color.$black) {
      filter: invert(100%);
    } @else {
      background-image: url(icon-fn.get-colored-svg-url($name, color.$white));
    }
  }
}

@mixin pi-pre($name) {
  background-image: url(icon-fn.get-pre-colored-svg-url($name));
}
